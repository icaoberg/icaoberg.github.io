<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>singularity | icaoberg AT github DOT io</title>
    <link>http://icaoberg.github.io/tag/singularity/</link>
      <atom:link href="http://icaoberg.github.io/tag/singularity/index.xml" rel="self" type="application/rss+xml" />
    <description>singularity</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Copyright Â© 2006-2021 icaoberg AT github DOT io</copyright><lastBuildDate>Sat, 28 Aug 2021 23:01:23 +0000</lastBuildDate>
    <image>
      <url>http://icaoberg.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>singularity</title>
      <link>http://icaoberg.github.io/tag/singularity/</link>
    </image>
    
    <item>
      <title>pretty.yml</title>
      <link>http://icaoberg.github.io/post/20210828-pretty-yml/</link>
      <pubDate>Sat, 28 Aug 2021 23:01:23 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210828-pretty-yml/</guid>
      <description>&lt;p&gt;During the summer I worked with an intern on migrating our repos from the private GitLab instance and my personal GitHub space to the PSC organization GitHub account. The idea was to publicly share our Dockerfiles and Singularity definition files for security and for those members in the community who might find them useful.&lt;/p&gt;
&lt;p&gt;We were successful -at least based on my expectations- at doing so. We spent a considerable amount of time finding patterns, no matter how small, that would help us save time and tentatively automate process.&lt;/p&gt;
&lt;p&gt;Some of these patterns were dumped into &lt;code&gt;pretty.yml&lt;/code&gt;. This YAML is nothing but a workflow for &lt;a href=&#34;https://github.com/features/actions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Actions&lt;/a&gt; that monitors the existence of very specific files in the repo. If this files are found then we would label the repo as ready for publishing.&lt;/p&gt;
&lt;p&gt;A working example of this workflow can be found &lt;a href=&#34;https://github.com/pscedu/singularity-tiger/actions/workflows/pretty.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;iframe src=&#34;https://giphy.com/embed/3orieWEkUA8HIfRULS&#34; width=&#34;480&#34; height=&#34;366&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/season-3-the-simpsons-3x11-3orieWEkUA8HIfRULS&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I honestly don&amp;rsquo;t know if this is considered a best practice in general, but it seems like so to me since we ended up saving so much time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>List of Singularity Containers</title>
      <link>http://icaoberg.github.io/post/20210825-singularity-containers/</link>
      <pubDate>Wed, 25 Aug 2021 22:05:41 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210825-singularity-containers/</guid>
      <description>&lt;iframe src=&#34;https://giphy.com/embed/CzbiCJTYOzHTW&#34; width=&#34;480&#34; height=&#34;270&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/CzbiCJTYOzHTW&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This summer, I was able to secure funding through &lt;a href=&#34;https://www.xsede.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XSEDE&lt;/a&gt; for an intern. &lt;a href=&#34;https://www.psc.edu/summer-interns-spotlight-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hind Albakri&lt;/a&gt; joined the Biomedical Applications Group to help me migrate, test and build Singularity containers to deploy applications to &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges-2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This happened for two reasons,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I personally prefer to deploy every app as a container and&lt;/li&gt;
&lt;li&gt;I needed to design a procedure to deploy and make them public for the benefit of our users and community.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am very happy with the outcome, since&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the repos have been migrated,&lt;/li&gt;
&lt;li&gt;documentation was written for the benefit of power users and staff members at PSC, and&lt;/li&gt;
&lt;li&gt;a procedure was designed and implemented for future deployments.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here is a list of the repositories for the packages that have been prepared to be deployed or have been deployed to &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges-2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;stem&#34;&gt;STEM&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Information&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-abyss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;abyss&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-abyss/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-abyss/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-abyss&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-asciigenome&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;asciigenome&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-asciigenome/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-asciigenome/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-asciigenome&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-aspera-connect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aspera-connect&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-aspera-connect/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-aspera-connect/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-aspera-connect&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bamtools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bamtools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bamtools/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bamtools/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bamtools&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bcftools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bcftools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bcftools/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bcftools/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bcftools&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bedtools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bedtools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bedtools/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bedtools/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bedtools&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bismark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bismark&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bismark/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bismark/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bismark&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-blast&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blast&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-blast/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-blast/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-blast&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bowtie2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bowtie2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bowtie2/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bowtie2/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bowtie2&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-busco&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;busco&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-busco/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-busco/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-busco&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bwa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bwa&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bwa/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bwa/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bwa&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-cutadapt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cutadapt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-cutadapt/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-cutadapt/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-cutadapt&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-fastani&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fastani&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fastani/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fastani/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-fastani&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-fastqc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fastqc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fastqc/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fastqc/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-fastqc&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-fasttree&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fasttree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fasttree/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fasttree/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-fasttree&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-gatk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gatk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gatk/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gatk/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-gatk&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-gent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gent&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gent/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gent/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-gent&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-hisat2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hisat2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hisat2/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hisat2/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-hisat2&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-hmmer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hmmer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hmmer/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hmmer/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-hmmer&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-htslib&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;htslib&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-htslib/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-htslib/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-htslib&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-kraken2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kraken2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-kraken2/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-kraken2/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-kraken2&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-methylpy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;methylpy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-methylpy/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-methylpy/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-methylpy&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-ncview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ncview&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ncview/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ncview/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-ncview&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-octave&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;octave&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-octave/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-octave/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-octave&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-phylip-suite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;phylip-suite&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-phylip-suite/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-phylip-suite/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-phylip-suite&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-picard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;picard&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-picard/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-picard/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-picard&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-prodigal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;prodigal&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-prodigal/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-prodigal/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-prodigal&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-raxml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;raxml&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-raxml/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-raxml/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-raxml&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-salmon&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;salmon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-salmon/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-salmon/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-salmon&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-samtools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;samtools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-samtools/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-samtools/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-samtools&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-spades&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spades&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-spades/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-spades/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-spades&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-spades&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spades&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-spades/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-spades/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-spades&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-sra-toolkit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sra-toolkit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-sra-toolkit/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-sra-toolkit/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-sra-toolkit&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-star&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;star&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-star/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-star/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-star&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-tiger&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tiger&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-tiger/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-tiger/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-tiger&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-trimmomatic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;trimmomatic&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-trimmomatic/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-trimmomatic/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-trimmomatic&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-trimmomatic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;trimmomatic&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-trimmomatic/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-trimmomatic/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-trimmomatic&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-vcf2maf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vcf2maf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-vcf2maf/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-vcf2maf/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-vcf2maf&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-viennarna&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;viennarna&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-viennarna/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-viennarna/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-viennarna&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;utilities&#34;&gt;Utilities&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Information&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-asciinema&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;asciinema&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-asciinema/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-asciinema/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-asciinema&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-aws-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aws-cli&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-aws-cli/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-aws-cli/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-aws-cli&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-bat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bat/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-bat/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-bat&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-browsh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browsh&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-browsh/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-browsh/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-browsh&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-dust&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dust&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-dust/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-dust/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-dust&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-fdupes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fdupes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fdupes/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-fdupes/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-fdupes&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-ffmpeg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ffmpeg&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ffmpeg/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ffmpeg/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-ffmpeg&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-flac&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flac&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-flac/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-flac/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-flac&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-gnuplot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gnuplot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gnuplot/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-gnuplot/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-gnuplot&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-graphviz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphviz&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-graphviz/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-graphviz/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-graphviz&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-hyperfine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hyperfine&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hyperfine/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-hyperfine/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-hyperfine&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-imagemagick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;imagemagick&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-imagemagick/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-imagemagick/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-imagemagick&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-lazygit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lazygit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-lazygit/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-lazygit/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-lazygit&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-mc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-mc/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-mc/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-mc&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-ncdu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ncdu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ncdu/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-ncdu/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-ncdu&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-octave&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;octave&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-octave/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-octave/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-octave&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-pandoc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pandoc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-pandoc/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-pandoc/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-pandoc&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-rclone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rclone&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-rclone/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-rclone/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-rclone&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://github.com/pscedu/singularity-visidata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visidata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-visidata/actions/workflows/main.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://github.com/pscedu/singularity-visidata/actions/workflows/pretty.yml/badge.svg&#34; alt=&#34;Status&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pscedu/singularity-visidata&#34; alt=&#34;License&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>singularity-rclone</title>
      <link>http://icaoberg.github.io/post/20210713-singularity-rclone/</link>
      <pubDate>Tue, 13 Jul 2021 00:17:20 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210713-singularity-rclone/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://rclone.org/img/logo_on_light__horizontal_color.svg&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;rclone is a command line program to manage files on cloud storage. It is a feature rich alternative to cloud vendors&#39; web storage interfaces.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singularity definition file &lt;a href=&#34;https://github.com/pscedu/singularity-rclone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code &lt;a href=&#34;https://rclone.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;to-install-this-container-on-bridges-2httpswwwpsceduresourcesbridges-2&#34;&gt;To install this container on &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges 2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Copy the&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIF&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;and the &lt;code&gt;rclone&lt;/code&gt; script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to &lt;code&gt;/opt/packages/rclone/1.55.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Copy the file &lt;code&gt;modulefile.lua&lt;/code&gt; to &lt;code&gt;/opt/modulefiles/rclone&lt;/code&gt; as &lt;code&gt;1.55.1.lua&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-load-and-use-the-module&#34;&gt;To load and use the module&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; module load rclone
&amp;gt; rclone --help 


Rclone syncs files to and from cloud storage providers as well as
mounting them, listing them in lots of different ways.

See the home page (https://rclone.org/) for installation, usage,
documentation, changelog and configuration walkthroughs.

Usage:
  rclone [flags]
  rclone [command]

Available Commands:
  about           Get quota information from the remote.
  authorize       Remote authorization.
  backend         Run a backend specific command.
  cat             Concatenates any files and sends them to stdout.
  check           Checks the files in the source and destination match.
  cleanup         Clean up the remote if possible.
  config          Enter an interactive configuration session.
  copy            Copy files from source to dest, skipping already copied.
  copyto          Copy files from source to dest, skipping already copied.
  copyurl         Copy url content to dest.
  cryptcheck      Cryptcheck checks the integrity of a crypted remote.
  cryptdecode     Cryptdecode returns unencrypted file names.
  dedupe          Interactively find duplicate filenames and delete/rename them.
  delete          Remove the files in path.
  deletefile      Remove a single file from remote.
  genautocomplete Output completion script for a given shell.
  gendocs         Output markdown docs for rclone to the directory supplied.
  hashsum         Produces a hashsum file for all the objects in the path.
  help            Show help for rclone commands, flags and backends.
  link            Generate public link to file/folder.
  listremotes     List all the remotes in the config file.
  ls              List the objects in the path with size and path.
  lsd             List all directories/containers/buckets in the path.
  lsf             List directories and objects in remote:path formatted for parsing.
  lsjson          List directories and objects in the path in JSON format.
  lsl             List the objects in path with modification time, size and path.
  md5sum          Produces an md5sum file for all the objects in the path.
  mkdir           Make the path if it doesn&#39;t already exist.
  mount           Mount the remote as file system on a mountpoint.
  move            Move files from source to dest.
  moveto          Move file or directory from source to dest.
  ncdu            Explore a remote with a text based user interface.
  obscure         Obscure password for use in the rclone config file.
  purge           Remove the path and all of its contents.
  rc              Run a command against a running rclone.
  rcat            Copies standard input to file on remote.
  rcd             Run rclone listening to remote control commands only.
  rmdir           Remove the empty directory at path.
  rmdirs          Remove empty directories under the path.
  selfupdate      Update the rclone binary.
  serve           Serve a remote over a protocol.
  settier         Changes storage class/tier of objects in remote.
  sha1sum         Produces an sha1sum file for all the objects in the path.
  size            Prints the total size and number of objects in remote:path.
  sync            Make source and dest identical, modifying destination only.
  test            Run a test command
  touch           Create new file or change file modification time.
  tree            List the contents of the remote in a tree like fashion.
  version         Show the version number.

Use &amp;quot;rclone [command] --help&amp;quot; for more information about a command.
Use &amp;quot;rclone help flags&amp;quot; for to see the global flags.
Use &amp;quot;rclone help backends&amp;quot; for a list of supported services.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>singularity-visidata</title>
      <link>http://icaoberg.github.io/post/20210712-singularity-visidata/</link>
      <pubDate>Mon, 12 Jul 2021 23:55:31 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210712-singularity-visidata/</guid>
      <description>&lt;p&gt;VisiData is an interactive multitool for tabular data. It combines the clarity of a spreadsheet, the efficiency of the terminal, and the power of Python, into a lightweight utility which can handle millions of rows with ease.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singularity definition file &lt;a href=&#34;https://github.com/pscedu/singularity-visidata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code &lt;a href=&#34;https://www.visidata.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;to-install-this-container-on-bridges-2httpswwwpsceduresourcesbridges-2&#34;&gt;To install this container on &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges 2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Copy the&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIF&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;and the &lt;code&gt;vd&lt;/code&gt; script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to &lt;code&gt;/opt/packages/visidata/2.4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Copy the file &lt;code&gt;modulefile.lua&lt;/code&gt; to &lt;code&gt;/opt/modulefiles/visidata&lt;/code&gt; as &lt;code&gt;2.4.lua&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-load-and-use-the-module&#34;&gt;To load and use the module&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; module load visidata
&amp;gt; vd
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/SPyM2xkC7nXgDA7LPCSYizqkd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/SPyM2xkC7nXgDA7LPCSYizqkd.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>singularity-dust</title>
      <link>http://icaoberg.github.io/post/20210712-singularity-dust/</link>
      <pubDate>Mon, 12 Jul 2021 22:31:56 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210712-singularity-dust/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bootandy/dust/master/media/snap.png&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt;
&lt;p&gt;du + rust = dust. Like du but more intuitive.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singularity definition file &lt;a href=&#34;https://github.com/pscedu/singularity-dust&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code &lt;a href=&#34;https://github.com/bootandy/dust&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;to-install-this-container-on-bridges-2httpswwwpsceduresourcesbridges-2&#34;&gt;To install this container on &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges 2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Copy the&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIF&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;and the &lt;code&gt;dust&lt;/code&gt; script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to &lt;code&gt;/opt/packages/dust/0.5.4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Copy the file &lt;code&gt;modulefile.lua&lt;/code&gt; to &lt;code&gt;/opt/modulefiles/dust&lt;/code&gt; as &lt;code&gt;0.5.4.lua&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-load-and-use-the-module&#34;&gt;To load and use the module&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; module load dust
&amp;gt; dust --help
Dust 0.6.0
Like du but more intuitive

USAGE:
    dust [FLAGS] [OPTIONS] [--] [inputs]...

FLAGS:
    -f, --filecount          Directory &#39;size&#39; is number of child files/dirs not disk size
    -s, --apparent-size      Use file length instead of blocks
    -p, --full-paths         Subdirectories will not have their path shortened
    -h, --help               Prints help information
    -i, --ignore_hidden      Obey .git_ignore rules &amp;amp; Do not display hidden files
    -b, --no-percent-bars    No percent bars or percentages will be displayed
    -c, --no-colors          No colors will be printed (normally largest directories are colored)
    -r, --reverse            Print tree upside down (biggest highest)
    -V, --version            Prints version information

OPTIONS:
    -d, --depth &amp;lt;depth&amp;gt;                             Depth to show
    -X, --ignore-directory &amp;lt;ignore_directory&amp;gt;...    Exclude any file or directory with this name
    -n, --number-of-lines &amp;lt;number_of_lines&amp;gt;
            Number of lines of output to show. This is Height, (but h is help) [default: 20]

    -w, --terminal_width &amp;lt;width&amp;gt;
            Specify width of output overriding the auto detection of terminal width


ARGS:
    &amp;lt;inputs&amp;gt;...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>singularity-bat</title>
      <link>http://icaoberg.github.io/post/20210712-singularity-bat/</link>
      <pubDate>Mon, 12 Jul 2021 22:24:09 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210712-singularity-bat/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7b7c397acc5b91b4c4cf7756015185fe3c5f700f70d256a212de51294a0cf673/68747470733a2f2f696d6775722e636f6d2f724773646e44652e706e67&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt;
&lt;p&gt;A cat(1) clone with syntax highlighting and Git integration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singularity definition file &lt;a href=&#34;https://github.com/pscedu/singularity-bat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source code &lt;a href=&#34;https://github.com/sharkdp/bat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;to-install-this-container-on-bridges-2httpswwwpsceduresourcesbridges-2&#34;&gt;To install this container on &lt;a href=&#34;https://www.psc.edu/resources/bridges-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bridges 2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Copy the&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIF&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;and the &lt;code&gt;bat&lt;/code&gt; script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to &lt;code&gt;/opt/packages/bat/0.17.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Copy the file &lt;code&gt;modulefile.lua&lt;/code&gt; to &lt;code&gt;/opt/modulefiles/bat&lt;/code&gt; as &lt;code&gt;0.17.1.lua&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;to-load-and-use-the-module&#34;&gt;To load and use the module&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; module load bat
&amp;gt; bat --help

bat 0.18.1
A cat(1) clone with syntax highlighting and Git integration.

USAGE:
    bat [OPTIONS] [FILE]...
    bat &amp;lt;SUBCOMMAND&amp;gt;

OPTIONS:
    -A, --show-all
            Show non-printable characters like space, tab or newline. This option can also be used
            to print binary files. Use &#39;--tabs&#39; to control the width of the tab-placeholders.
    -p, --plain
            Only show plain style, no decorations. This is an alias for &#39;--style=plain&#39;. When &#39;-p&#39;
            is used twice (&#39;-pp&#39;), it also disables automatic paging (alias for &#39;--style=plain
            --pager=never&#39;).
    -l, --language &amp;lt;language&amp;gt;
            Explicitly set the language for syntax highlighting. The language can be specified as a
            name (like &#39;C++&#39; or &#39;LaTeX&#39;) or possible file extension (like &#39;cpp&#39;, &#39;hpp&#39; or &#39;md&#39;). Use
            &#39;--list-languages&#39; to show all supported language names and file extensions.
    -H, --highlight-line &amp;lt;N:M&amp;gt;...
            Highlight the specified line ranges with a different background color For example:
              &#39;--highlight-line 40&#39; highlights line 40
              &#39;--highlight-line 30:40&#39; highlights lines 30 to 40
              &#39;--highlight-line :40&#39; highlights lines 1 to 40
              &#39;--highlight-line 40:&#39; highlights lines 40 to the end of the file
        --file-name &amp;lt;name&amp;gt;...
            Specify the name to display for a file. Useful when piping data to bat from STDIN when
            bat does not otherwise know the filename. Note that the provided file name is also used
            for syntax detection.
    -d, --diff
            Only show lines that have been added/removed/modified with respect to the Git index. Use
            --diff-context=N to control how much context you want to see.
        --diff-context &amp;lt;N&amp;gt;
            Include N lines of context around added/removed/modified lines when using &#39;--diff&#39;.

        --tabs &amp;lt;T&amp;gt;
            Set the tab width to T spaces. Use a width of 0 to pass tabs through directly

        --wrap &amp;lt;mode&amp;gt;
            Specify the text-wrapping mode (*auto*, never, character). The &#39;--terminal-width&#39; option
            can be used in addition to control the output width.
        --terminal-width &amp;lt;width&amp;gt;
            Explicitly set the width of the terminal instead of determining it automatically. If
            prefixed with &#39;+&#39; or &#39;-&#39;, the value will be treated as an offset to the actual terminal
            width. See also: &#39;--wrap&#39;.
    -n, --number
            Only show line numbers, no other decorations. This is an alias for &#39;--style=numbers&#39;

        --color &amp;lt;when&amp;gt;
            Specify when to use colored output. The automatic mode only enables colors if an
            interactive terminal is detected - colors are automatically disabled if the output goes
            to a pipe.
            Possible values: *auto*, never, always.
        --italic-text &amp;lt;when&amp;gt;
            Specify when to use ANSI sequences for italic text in the output. Possible values:
            always, *never*.
        --decorations &amp;lt;when&amp;gt;
            Specify when to use the decorations that have been specified via &#39;--style&#39;. The
            automatic mode only enables decorations if an interactive terminal is detected. Possible
            values: *auto*, never, always.
    -f, --force-colorization
            Alias for &#39;--decorations=always --color=always&#39;. This is useful if the output of bat is
            piped to another program, but you want to keep the colorization/decorations.
        --paging &amp;lt;when&amp;gt;
            Specify when to use the pager. To disable the pager, use --paging=never&#39; or its
            alias,&#39;-P&#39;. To disable the pager permanently, set BAT_PAGER to an empty string. To
            control which pager is used, see the &#39;--pager&#39; option. Possible values: *auto*, never,
            always.
        --pager &amp;lt;command&amp;gt;
            Determine which pager is used. This option will override the PAGER and BAT_PAGER
            environment variables. The default pager is &#39;less&#39;. To control when the pager is used,
            see the &#39;--paging&#39; option. Example: &#39;--pager &amp;quot;less -RF&amp;quot;&#39;.
    -m, --map-syntax &amp;lt;glob:syntax&amp;gt;...
            Map a glob pattern to an existing syntax name. The glob pattern is matched on the full
            path and the filename. For example, to highlight *.build files with the Python syntax,
            use -m &#39;*.build:Python&#39;. To highlight files named &#39;.myignore&#39; with the Git Ignore
            syntax, use -m &#39;.myignore:Git Ignore&#39;. Note that the right-hand side is the *name* of
            the syntax, not a file extension.
        --theme &amp;lt;theme&amp;gt;
            Set the theme for syntax highlighting. Use &#39;--list-themes&#39; to see all available themes.
            To set a default theme, add the &#39;--theme=&amp;quot;...&amp;quot;&#39; option to the configuration file or
            export the BAT_THEME environment variable (e.g.: export BAT_THEME=&amp;quot;...&amp;quot;).
        --list-themes
            Display a list of supported themes for syntax highlighting.

        --style &amp;lt;components&amp;gt;
            Configure which elements (line numbers, file headers, grid borders, Git modifications,
            ..) to display in addition to the file contents. The argument is a comma-separated list
            of components to display (e.g. &#39;numbers,changes,grid&#39;) or a pre-defined style (&#39;full&#39;).
            To set a default style, add the &#39;--style=&amp;quot;..&amp;quot;&#39; option to the configuration file or
            export the BAT_STYLE environment variable (e.g.: export BAT_STYLE=&amp;quot;..&amp;quot;).

            Possible values:

              * full: enables all available components.
              * auto: same as &#39;full&#39;, unless the output is piped (default).
              * plain: disables all available components.
              * changes: show Git modification markers.
              * header: show filenames before the content.
              * grid: vertical/horizontal lines to separate side bar
                      and the header from the content.
              * rule: horizontal lines to delimit files.
              * numbers: show line numbers in the side bar.
              * snip: draw separation lines between distinct line ranges.
    -r, --line-range &amp;lt;N:M&amp;gt;...
            Only print the specified range of lines for each file. For example:
              &#39;--line-range 30:40&#39; prints lines 30 to 40
              &#39;--line-range :40&#39; prints lines 1 to 40
              &#39;--line-range 40:&#39; prints lines 40 to the end of the file
              &#39;--line-range 40&#39; only prints line 40
    -L, --list-languages
            Display a list of supported languages for syntax highlighting.

    -u, --unbuffered
            This option exists for POSIX-compliance reasons (&#39;u&#39; is for &#39;unbuffered&#39;). The output is
            always unbuffered - this option is simply ignored.
        --diagnostic
            Show diagnostic information for bug reports.

    -h, --help
            Print this help message.

    -V, --version
            Show version information.


ARGS:
    &amp;lt;FILE&amp;gt;...
            File(s) to print / concatenate. Use a dash (&#39;-&#39;) or no argument at all to read from
            standard input.

SUBCOMMANDS:
    cache    Modify the syntax-definition and theme cache

Note: `bat -h` prints a short and concise overview while `bat --help` gives all details.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GeNT</title>
      <link>http://icaoberg.github.io/post/20210327-fortran/</link>
      <pubDate>Sat, 27 Mar 2021 22:39:22 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210327-fortran/</guid>
      <description>&lt;p&gt;I am building a container for GeNT, a bioformatics app written in Fortran.&lt;/p&gt;
&lt;div class=&#34;github-card&#34; data-github=&#34;icaoberg/singularity-gent&#34; data-width=&#34;400&#34; data-height=&#34;&#34; data-theme=&#34;default&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;//cdn.jsdelivr.net/github-cards/latest/widget.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;I mean&amp;hellip; it works&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNU GCC</title>
      <link>http://icaoberg.github.io/post/singularity-gcc/</link>
      <pubDate>Fri, 03 Apr 2020 22:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gcc/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gcc.gnu.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The GNU Compiler Collection&lt;/a&gt; is a compiler system produced by the GNU Project supporting various programming languages. GCC is a key component of the GNU toolchain and the standard compiler for most projects related to GNU and Linux, including the Linux kernel.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;
&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gcc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To facilitate building the container, you will find two &lt;strong&gt;simple&lt;/strong&gt; scripts in the repository&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rbuild.sh&lt;/code&gt;. Builds the image remotely and then pulls it down locally. You will need access to &lt;a href=&#34;https://cloud.sylabs.io/builder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io Remote Builder&lt;/a&gt; to do this. Getting access to the Remote Builder is beyond the scope of this post.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build.sh&lt;/code&gt;. Builds the image locally. You will need root privileges to build the container locally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-debian-dusty-gcc-v8.3.0.sif
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build the image locally simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-debian-dusty-gcc-v8.3.0.sif
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;
&lt;p&gt;To build the image remotely simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example-1-building-samtools-from-source&#34;&gt;Example 1. Building samtools from source&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;THIS EXAMPLE ASSUMES SINGULARITY IS INSTALLED AND IS AVAILABLE TO YOUR USER&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Building &lt;a href=&#34;https://github.com/samtools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;samtools&lt;/a&gt; from source code is a three step process.&lt;/p&gt;
&lt;p&gt;First, we need to download the source code for samtools. For version 1.10, type in termninal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -nc https://github.com/samtools/samtools/releases/download/1.10/samtools-1.10.tar.bz2
bunzip2 samtools-1.10.tar.bz2 &amp;amp;&amp;amp; tar -xf samtools-1.10.tar &amp;amp;&amp;amp; rm -f samtools-1.10.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, you need to download the image I created from SyLabs (alternatively you can build the image yourself). To download the image type&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity pull --arch amd64 library://icaoberg/default/gcc:v8.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running these commands, you should see these files/folders&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[gcc-example]$ ls -lt
total 149809
-rwxr-xr-x 1 icaoberg icaoberg 153572283 Apr  4 03:39 gcc_v8.3.0.sif
drwxrwxr-x 9 icaoberg icaoberg        80 Dec  6 11:46 samtools-1.10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Third, we need to shell into the Singularity image and then compile from source. To shell into the image, type in terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity shell gcc_v8.3.0.sif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we are inside the container, let&amp;rsquo;s change directory to samtools and compile the tool. Type in terminal,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd samtools-1.10
./configure
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running these commands, you should see the binary now&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Singularity&amp;gt; ls -lt samtools

-rwxr-xr-x 1 icaoberg icaoberg 6656944 Apr  4 04:21 samtools
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember, the you need to run the binary within the container&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Singularity&amp;gt; ./samtools --help

Program: samtools (Tools for alignments in the SAM format)
Version: 1.10 (using htslib 1.10)

Usage:   samtools &amp;lt;command&amp;gt; [options]

Commands:
  -- Indexing
     dict           create a sequence dictionary file
     faidx          index/extract FASTA
     fqidx          index/extract FASTQ
     index          index alignment

  -- Editing
     calmd          recalculate MD/NM tags and &#39;=&#39; bases
     fixmate        fix mate information
     reheader       replace BAM header
     targetcut      cut fosmid regions (for fosmid pool only)
     addreplacerg   adds or replaces RG tags
     markdup        mark duplicates

  -- File operations
     collate        shuffle and group alignments by name
     cat            concatenate BAMs
     merge          merge sorted alignments
     mpileup        multi-way pileup
     sort           sort alignment file
     split          splits a file by read group
     quickcheck     quickly check if SAM/BAM/CRAM file appears intact
     fastq          converts a BAM to a FASTQ
     fasta          converts a BAM to a FASTA

  -- Statistics
     bedcov         read depth per BED region
     coverage       alignment depth and percent coverage
     depth          compute the depth
     flagstat       simple stats
     idxstats       BAM index stats
     phase          phase heterozygotes
     stats          generate stats (former bamcheck)

  -- Viewing
     flags          explain BAM flags
     tview          text alignment viewer
     view           SAM&amp;lt;-&amp;gt;BAM&amp;lt;-&amp;gt;CRAM conversion
     depad          convert padded BAM to unpadded BAM
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example-2-compiling-and-running-a-simple-app&#34;&gt;Example 2. Compiling and running a simple app&lt;/h2&gt;
&lt;p&gt;Consider this file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
int main()
{
   /* printf function displays the content that is
    * passed between the double quotes.
    */
   printf(&amp;quot;Hello World&amp;quot;);
   return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The exists in a file called &lt;code&gt;hello.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To compile this file type in terminal,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity run --app gcc singularity-debian-dusty-gcc-v8.3.0.sif hello.c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will create the file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;â ls -lt a.out

-rwxr-xr-x 1 icaoberg icaoberg 16608 Apr  4 05:10 a.out
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./a.out

Hello World
``
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>cowsay</title>
      <link>http://icaoberg.github.io/post/singularity-cowsay/</link>
      <pubDate>Wed, 26 Feb 2020 10:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-cowsay/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Does anyone use &lt;a href=&#34;https://twitter.com/SingularityApp?ref_src=twsrc%5Etfw&#34;&gt;@SingularityApp&lt;/a&gt;  and modules to load pre-existing images into their workspace? Just curious if we are reinventing the wheel by doing so and there exists another solution &lt;a href=&#34;https://t.co/KL0GilswXA&#34;&gt;https://t.co/KL0GilswXA&lt;/a&gt;&lt;/p&gt;&amp;mdash; IvÃ¡n (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1232811924204724224?ref_src=twsrc%5Etfw&#34;&gt;February 26, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Working with &lt;a href=&#34;http://modules.sourceforge.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;environment modules&lt;/a&gt; makes my life so much easier.&lt;/p&gt;
&lt;p&gt;For example, for &lt;code&gt;cowsay&lt;/code&gt;,I created a &lt;code&gt;modulefile&lt;/code&gt; that will load the Singularity container to the workspace along with a script that calls it. Making the process transparent to the user (very little changes to their scripts, may be their SLURM submission scripts).&lt;/p&gt;
&lt;p&gt;To make this work you need three things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an executable script that calls singularity (avoid using &lt;a href=&#34;https://en.wikipedia.org/wiki/Alias_%28command%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the Singularity container file&lt;/li&gt;
&lt;li&gt;a modulefile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;modulefile&lt;/code&gt; file I created for &lt;code&gt;cowsay&lt;/code&gt; is the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#%Module
##
## cowsay modulefile
##
## modulefiles/
##

set ver 3.03

set msg &amp;quot;This module adds cowsay $ver to various paths\n&amp;quot;

proc ModulesHelp { } {
        puts stderr $msg
}

module-whatis &amp;quot;Use cowsay tools $ver&amp;quot;

prepend-path PATH /path/to/containers/cowsay/v3.03/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;modulefile&lt;/code&gt; itself is very straightforward, all it does is prepend a folder. Now the folder its prepending has two files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Singularity image&lt;/li&gt;
&lt;li&gt;an executable script that calls the image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my system, there exists a folder with the following files&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[icaoberg] $ ls -lt
total 68899
-rwxr-xr-x 1 root root 70799360 Feb 26 17:48 singularity-debian-buster-cowsay-v3.03.simg
-rwxr-xr-x 1 root root      366 Feb 26 17:48 cowsay
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The contents of &lt;code&gt;cowsay&lt;/code&gt; (the script I built, not the actual binary) are&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-debian-buster-cowsay-v3.03.simg

function is_compute_node(){
if [ -x &amp;quot;$(command -v singularity)&amp;quot; ]; then
	return 0
else
	return 1
fi
}

if is_compute_node; then
	singularity run --app cowsay $(pwd)/$IMAGE &amp;quot;$1&amp;quot;
else
	echo &amp;quot;Singularity apps cannot run in the head node. Please request an allocation or call Singularity within a job.&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the function&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function is_compute_node(){
if [ -x &amp;quot;$(command -v singularity)&amp;quot; ]; then
        return 0
else
        return 1
fi
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;is neccesary because the &lt;code&gt;singularity&lt;/code&gt; binary is not accesible from the head node of our HPC cluster. Users must request an allocation to a compute node in order to run apps in Singularity containers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Say I have the script &lt;code&gt;example.sh&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
#
#$ -j y
#$ -S /bin/bash
#$ -cwd

echo &amp;quot;TOTAL SUCCESS&amp;quot; | cowsay
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the changes above, it will now become&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
#
#$ -j y
#$ -S /bin/bash
#$ -cwd

module load singularity/cowsay-3.03
echo &amp;quot;TOTAL SUCCESS&amp;quot; | cowsay
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Submitting the script above using SLURM&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sbatch -p public --mem=1Gb example.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;should lead to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; _______________
&amp;lt; TOTAL SUCCESS &amp;gt;
 ---------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;
&lt;p&gt;I hope you found this post useful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/singularity-cowsay&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub source code repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg/default/cowsay&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io Cloud image repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>bedtools</title>
      <link>http://icaoberg.github.io/post/singularity-bedtools-update/</link>
      <pubDate>Mon, 03 Feb 2020 18:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-bedtools-update/</guid>
      <description>&lt;h2 id=&#34;about-bedtools&#34;&gt;About bedtools&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Collectively, the &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bedtools&lt;/a&gt; utilities are a swiss-army knife of tools for a wide-range of genomics analysis tasks. The most widely-used tools enable genome arithmetic: that is, set theory on the genome. For example, bedtools allows one to intersect, merge, count, complement, and shuffle genomic intervals from multiple files in widely-used genomic file formats such as BAM, BED, GFF/GTF, VCF. While each individual tool is designed to do a relatively simple task (e.g., intersect two interval files), quite sophisticated analyses can be conducted by combining multiple bedtools operations on the UNIX command line.&lt;/p&gt;
&lt;h2 id=&#34;okay-hear-me-out&#34;&gt;Okay&amp;hellip; hear me out&lt;/h2&gt;
&lt;p&gt;Ok, so I added two simple examples to the repo to make sure users can test the Singularity image. However I need to either learn how to use the test section of the recipe of find a useful way to run tests. Kind of challenging if I want to keep it simple.&lt;/p&gt;
&lt;h3 id=&#34;example02sh&#34;&gt;example02.sh&lt;/h3&gt;
&lt;p&gt;The shell script below is pretty simple&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# icaoberg - this example is fork that uses a bedtools in a Singularity container
CONTAINER=../../singularity-bedtools.simg

echo &amp;quot;chr1	10	50	10&amp;quot; &amp;gt; a.bed
echo &amp;quot;chr1	20	40	20&amp;quot; &amp;gt; b.bed
echo &amp;quot;chr1	30	33	30&amp;quot; &amp;gt; c.bed

# Find the sub-intervals shared and unique to each file.
if [ -f $CONTAINER ]; then
	singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed | column -t
fi

# Intersect the sub-intervals with the original intervals to collect the scores
if [ -f $CONTAINER ]; then
	singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed \
    | singularity run --app bedtools $CONTAINER intersect -a - -b a.bed b.bed c.bed -wa -wb \
    | column -t
fi

# Grooupby the sub-intervals with the mean score from each of the original files.
if [ -f $CONTAINER ]; then
        singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed \
    | singularity run --app bedtools $CONTAINER intersect -a - -b a.bed b.bed c.bed -wa -wb \
    | singularity run --app bedtools $CONTAINER groupby -g 1-5 -c 13 -o mean \
    | column -t
fi

rm -f *.bed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The real question is, will this scale?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bedtools</title>
      <link>http://icaoberg.github.io/post/singularity-bedtools/</link>
      <pubDate>Sun, 26 Jan 2020 18:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-bedtools/</guid>
      <description>&lt;h2 id=&#34;about-bedtools&#34;&gt;About bedtools&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Collectively, the &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bedtools&lt;/a&gt; utilities are a swiss-army knife of tools for a wide-range of genomics analysis tasks. The most widely-used tools enable genome arithmetic: that is, set theory on the genome. For example, bedtools allows one to intersect, merge, count, complement, and shuffle genomic intervals from multiple files in widely-used genomic file formats such as BAM, BED, GFF/GTF, VCF. While each individual tool is designed to do a relatively simple task (e.g., intersect two interval files), quite sophisticated analyses can be conducted by combining multiple bedtools operations on the UNIX command line.&lt;/p&gt;
&lt;h2 id=&#34;downloading-the-image-from-sylabsio&#34;&gt;Downloading the image from SyLabs.io&lt;/h2&gt;
&lt;p&gt;For simplicity, I have placed a copy of the container in &lt;a href=&#34;https://cloud.sylabs.io/library/_container/5e2fb360bb587a8c79c3e875&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; singularity search bedtools

No users found for &#39;bedtools&#39;

No collections found for &#39;bedtools&#39;

Found 1 containers for &#39;bedtools&#39;
	library://icaoberg/default/bedtools
		Tags: v2.29.2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To download this image locally simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity pull library://icaoberg/default/bedtools:v2.29.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;using-the-singularity-image&#34;&gt;Using the Singularity image&lt;/h3&gt;
&lt;h4 id=&#34;example-create-a-master-chromhmm-track-from-the-9-distinct-cell-types&#34;&gt;Example. Create a master ChromHMM track from the 9 distinct cell types.&lt;/h4&gt;
&lt;p&gt;You can find the script &lt;code&gt;example01&lt;/code&gt; &lt;a href=&#34;https://gist.github.com/icaoberg/2253e0ef34b3fd7dd3f4703d8037e83f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. It is based on existing examples, the script is simply calling bedtools in the Singularity container.&lt;/p&gt;
&lt;p&gt;Standard output is not neccesarily useful, however you should see something like this.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/296318&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/296318.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;I am nothing but a humble programmer creating the container for this wonderful app. &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bedtools&lt;/a&gt; is developed in the &lt;a href=&#34;http://quinlanlab.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quinlan laboratory&lt;/a&gt; at the &lt;a href=&#34;https://www.utah.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;University of Utah&lt;/a&gt; and benefits from fantastic contributions made by scientists worldwide.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gifgen</title>
      <link>http://icaoberg.github.io/post/singularity-gifgen/</link>
      <pubDate>Tue, 14 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gifgen/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NY_EOhHRTdo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;./sabina.gif&#34; alt=&#34;Joaquin Sabina&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lukechilds/gifgen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gifgen&lt;/a&gt; provides simple high quality GIF encoding.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;
&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gifgen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gifgen.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build the image locally simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gifgen.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;
&lt;p&gt;To build the image remotely simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;running-gifgen&#34;&gt;Running gifgen&lt;/h2&gt;
&lt;p&gt;To run the app in the container, simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity exec singularity-gifgen.simg gifgen
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Singularity and Travis config</title>
      <link>http://icaoberg.github.io/post/singularity-travis-config/</link>
      <pubDate>Tue, 07 Jan 2020 16:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-travis-config/</guid>
      <description>&lt;p&gt;If you read my previous post, I updated a repository I built a while ago with a Singularity recipe for gotop. The main reason for the post was to show how easy it is to build a simple small container both locally and remotely.&lt;/p&gt;
&lt;iframe src=&#34;https://giphy.com/embed/XR9Dp54ZC4dji&#34; width=&#34;480&#34; height=&#34;288&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;br&gt;**Figure 1**. Surprised, it works pretty easily.
&lt;p&gt;However because my original repository was built a while ago, I built my original container on Singularity v2.6.0 while the latest is Singularity v3.5.2. Hence, I needed to update my scripts. And you know, it wasn&amp;rsquo;t that difficult and it worked.&lt;/p&gt;
&lt;p&gt;But then&amp;hellip;. Travis.&lt;/p&gt;
&lt;h2 id=&#34;travis-my-old-enemy&#34;&gt;Travis, my old enemy&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Travis CI is a hosted continuous integration service used to build and test software projects hosted at GitHub.&amp;rdquo; [&lt;a href=&#34;https://en.wikipedia.org/wiki/Travis_CI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&lt;/a&gt;]. It was comforting to find Singularity Hub has a template I could reuse. To see their repo click &lt;a href=&#34;https://github.com/singularityhub/travis-ci&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hence, I needed to update my Travis config file as well. It wasn&amp;rsquo;t easy. Installing the newer version of Singularity was a little more convoluted than the older versions (though not that much). Now, the Travis config for &lt;a href=&#34;https://github.com/icaoberg/singularity-gotop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gotop&lt;/a&gt; looks like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;os: linux

# whitelist
branches:
  only:
    - master

language: go

go:
    - &amp;quot;1.13&amp;quot;

python:
    - &amp;quot;3.7&amp;quot;

addons:
  apt:
    packages:
      - flawfinder
      - squashfs-tools
      - uuid-dev
      - libuuid1
      - libffi-dev
      - libssl-dev
      - libssl1.0.0
      - libarchive-dev
      - libgpgme11-dev
      - libseccomp-dev
  homebrew:
    packages:
      - squashfs
    update: true

sudo: required
#dist: trusty

matrix:
  include:
    - python: &amp;quot;2.6&amp;quot;
    - python: &amp;quot;3.5&amp;quot;

before_install:
  - sudo chmod u+x .travis/*.sh
  - /bin/bash .travis/setup.sh

install:
  - # override

script:
  - bash ./build.sh
  - du -h singularity-gotop.simg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the &lt;code&gt;./.travis/setup.sh&lt;/code&gt; is just as straight-forward&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash -ex

sudo sed -i -e &#39;s/^Defaults\tsecure_path.*$//&#39; /etc/sudoers

pip install --user sregistry[all]

# Install Singularity
SINGULARITY_BASE=&amp;quot;${GOPATH}/src/github.com/sylabs/singularity&amp;quot;
export PATH=&amp;quot;${GOPATH}/bin:${PATH}&amp;quot;

mkdir -p &amp;quot;${GOPATH}/src/github.com/sylabs&amp;quot;
cd &amp;quot;${GOPATH}/src/github.com/sylabs&amp;quot;

git clone https://github.com/sylabs/singularity
git checkout tags/v3.5.2
cd singularity
./mconfig -v -p /usr/local
make -j `nproc 2&amp;gt;/dev/null || echo 1` -C ./builddir all
sudo make -C ./builddir install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script above is a cleaned up version of the script suggested by the Singularity Hub repo. &lt;a href=&#34;https://travis-ci.org/icaoberg/singularity-gotop/builds/633977539&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;It works!&lt;/a&gt; So I am a happy camper.&lt;/p&gt;
&lt;iframe src=&#34;https://giphy.com/embed/pGOLBwYBTEvsI&#34; width=&#34;480&#34; height=&#34;357&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;br&gt;**Figure 2**. I am a happy camper.
</description>
    </item>
    
    <item>
      <title>gotop</title>
      <link>http://icaoberg.github.io/post/singularity-gotop/</link>
      <pubDate>Tue, 07 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gotop/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;./logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gotop&lt;/a&gt; is a very useful app that I use all the time in our department cluster. Even though I have root privileges in our HPC cluster, I&amp;rsquo;d rather do my computing as a regular user. It keeps me in check and forces me to think like a power/regular user.&lt;/p&gt;
&lt;p&gt;Hence, I use &lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gotop&lt;/a&gt; in a Singularity container.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;
&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gotop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To facilitate building the container, you will find two &lt;strong&gt;simple&lt;/strong&gt; scripts in the repository&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rbuild.sh&lt;/code&gt;. Builds the image remotely and then pulls it down locally. You will need access to &lt;a href=&#34;https://cloud.sylabs.io/builder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io Remote Builder&lt;/a&gt; to do this. Getting access to the Remote Builder is beyond the scope of this post.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build.sh&lt;/code&gt;. Builds the image locally. You will need root privileges to build the container locally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build the image locally simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output should look similar to&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292285&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292285.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;
&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;
&lt;p&gt;To build the image remotely simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output should look similar to&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A note on building remotely. Because my script is simple and straightforward, there are no annotations associated with this build. If you were to take a look at my profile in &lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io&lt;/a&gt; you will notice there is a new project associated with the remote build&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is a footprint, evidence the image was built remotely. Also notice the download number is 1. This is because running the remote commands builds the container then downloads it locally.&lt;/p&gt;
&lt;h2 id=&#34;running-gotop&#34;&gt;Running gotop&lt;/h2&gt;
&lt;p&gt;To run the app in the container, simply run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity exec singularity-gotop.simg gotop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output should look similar to&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292294&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292294.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Singularity Desktop MacOSX (Beta Release)</title>
      <link>http://icaoberg.github.io/post/singularity-macosx-journey-1/</link>
      <pubDate>Tue, 07 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-macosx-journey-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: My first journey went better than expected. However the purpose of this post is to document the issues I experienced in order to, hopefully, find a solution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>browsh</title>
      <link>http://icaoberg.github.io/post/singularity-browsh/</link>
      <pubDate>Sun, 13 Oct 2019 01:19:33 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-browsh/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just created and pushed an image to &lt;a href=&#34;https://twitter.com/SylabsIO?ref_src=twsrc%5Etfw&#34;&gt;@SylabsIO&lt;/a&gt; cloud for &lt;a href=&#34;https://twitter.com/brow_sh?ref_src=twsrc%5Etfw&#34;&gt;@brow_sh&lt;/a&gt;, an amazing fully-modern text-based browser developed by &lt;a href=&#34;https://twitter.com/twombh?ref_src=twsrc%5Etfw&#34;&gt;@twombh&lt;/a&gt; &lt;a href=&#34;https://t.co/0FxdxDqO8U&#34;&gt;pic.twitter.com/0FxdxDqO8U&lt;/a&gt;&lt;/p&gt;&amp;mdash; IvÃ¡n (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1183250309612789765?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Here is the deal, I have been using &lt;a href=&#34;http://lynx.browser.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lynx&lt;/a&gt; since forever. Just because. However today I found about &lt;a href=&#34;https://www.brow.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;browsh&lt;/a&gt;. What a joyous moment!&lt;/p&gt;
&lt;p&gt;Finally a browser I would feel happy running on the HPC cluster. As always, I think Singularity is the best way to deploy tools like this for larger machines (especially if you are a user without root privileges).&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/singularity-browsh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub source code repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg/default/browsh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SyLabs.io Cloud image repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CellOrganizer for Singularity</title>
      <link>http://icaoberg.github.io/post/singularity-retweet-ceo/</link>
      <pubDate>Sat, 21 Sep 2019 00:20:50 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-retweet-ceo/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I have been using Matlab for about 18 years to do anything and everything. Currently, I am using it to develop &lt;a href=&#34;https://twitter.com/CellOrganizer?ref_src=twsrc%5Etfw&#34;&gt;@CellOrganizer&lt;/a&gt; along with CellOrganizer for &lt;a href=&#34;https://twitter.com/ProjectJupyter?ref_src=twsrc%5Etfw&#34;&gt;@ProjectJupyter&lt;/a&gt; on  &lt;a href=&#34;https://twitter.com/Docker?ref_src=twsrc%5Etfw&#34;&gt;@docker&lt;/a&gt;, CellOrganizer for &lt;a href=&#34;https://twitter.com/galaxyproject?ref_src=twsrc%5Etfw&#34;&gt;@galaxyproject&lt;/a&gt; and CellOrganizer on &lt;a href=&#34;https://twitter.com/SingularityApp?ref_src=twsrc%5Etfw&#34;&gt;@SingularityApp&lt;/a&gt;. All part of &lt;a href=&#34;https://twitter.com/MMBioS?ref_src=twsrc%5Etfw&#34;&gt;@MMBioS&lt;/a&gt; &lt;a href=&#34;https://t.co/qSUGxgmeAX&#34;&gt;pic.twitter.com/qSUGxgmeAX&lt;/a&gt;&lt;/p&gt;&amp;mdash; IvÃ¡n (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1174705344339161089?ref_src=twsrc%5Etfw&#34;&gt;September 19, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;P.S. I got retweeted by the official Singularity account on Twitter as well as their CEO. What a time to be alive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>singularity-cowsay</title>
      <link>http://icaoberg.github.io/slides/singularity-cowsay/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/slides/singularity-cowsay/</guid>
      <description>&lt;h1 id=&#34;singularity-cowsay&#34;&gt;singularity-cowsay&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt; ____________
&amp;lt; &#39;sup nerds &amp;gt;
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is Singularity?&lt;/li&gt;
&lt;li&gt;Why use Singularity?&lt;/li&gt;
&lt;li&gt;Wait&amp;hellip; why not Docker?&lt;/li&gt;
&lt;li&gt;Example&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s try to get an image from &lt;a href=&#34;https://sylabs.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sylabs.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Run the command below to search for &lt;code&gt;cowsay&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;singularity search cowsay
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;example-1&#34;&gt;Example&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;singularity search cowsay
No users found for &#39;cowsay&#39;

No collections found for &#39;cowsay&#39;

Found 4 containers for &#39;cowsay&#39;
	library://tyson-swetnam/default/cowsay
		Tags: latest
	library://tyson-swetnam/default/cowsay-v2
		Tags:
	library://ebirn/mycollection/my-cowsay
		Tags: develop
	library://icaoberg/default/cowsay
		Tags: latest v3.03
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
