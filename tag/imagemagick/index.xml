<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>imagemagick | icaoberg AT github DOT io</title>
    <link>http://icaoberg.github.io/tag/imagemagick/</link>
      <atom:link href="http://icaoberg.github.io/tag/imagemagick/index.xml" rel="self" type="application/rss+xml" />
    <description>imagemagick</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Copyright © 2006-2022 icaoberg AT github DOT io</copyright><lastBuildDate>Sat, 07 Aug 2021 20:45:14 +0000</lastBuildDate>
    <image>
      <url>http://icaoberg.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>imagemagick</title>
      <link>http://icaoberg.github.io/tag/imagemagick/</link>
    </image>
    
    <item>
      <title>More random ellipsoids</title>
      <link>http://icaoberg.github.io/post/20210807-random-ellipsoids-2/</link>
      <pubDate>Sat, 07 Aug 2021 20:45:14 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210807-random-ellipsoids-2/</guid>
      <description>&lt;p&gt;I thought about this during. Most of the ellipsoids I generate get synthesized outside of the image. Hence I have many blank images like this one&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;featured.jpg&#34; alt=&#34;Montage&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-can-i-do&#34;&gt;What can I do?&lt;/h2&gt;
&lt;p&gt;Not much. I clearly reached the moment where I need to sample and compute these stats using something like Python (or other) and then call ImageMagick from it. See convoluted script below&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X0=$((448 + $RANDOM % 576))
	Y0=$((448 + $RANDOM % 576))
	let &amp;quot;X_CIRCLE_EDGE=$X0+15&amp;quot;
	let &amp;quot;Y_CIRCLE_EDGE=$Y0+15&amp;quot;
	ANGLE=$((-45 + $RANDOM % 45))
	MIN_RADIUS=$((5 + $RANDOM % 50))
	X_ELLIPSOID_EDGE=$(($MIN_RADIUS + $RANDOM % 75 ))
	MIN_RADIUS=$((5 + $RANDOM % 75))
	Y_ELLIPSOID_EDGE=$(($MIN_RADIUS + $RANDOM % 75))
	FLIP_A_COIN=$(($(($RANDOM%10))%2))

	if [ $FLIP_A_COIN -eq 1 ];then
		convert -size 1024x1024 xc:black  \
        		    -draw &amp;quot;fill white rotate $ANGLE ellipse $X0,$Y0 $X_ELLIPSOID_EDGE,$Y_ELLIPSOID_EDGE 0,360 &amp;quot; \
					-draw &amp;quot;fill black rotate $ANGLE circle $X0,$Y0 $X_CIRCLE_EDGE,$Y_CIRCLE_EDGE&amp;quot; cell$I.png
	else
		convert -size 1024x1024 xc:black  \
        		    -draw &amp;quot;fill white rotate $ANGLE ellipse $X0,$Y0 $Y_ELLIPSOID_EDGE,$X_ELLIPSOID_EDGE 0,360 &amp;quot; \
					-draw &amp;quot;fill white rotate $ANGLE circle $X0,$Y0 $X_CIRCLE_EDGE,$Y_CIRCLE_EDGE&amp;quot; cell$I.png
	fi
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 cell*.png montage10x10-translation-and-rotation6.png
convert montage10x10-translation-and-rotation6.png -scale 50% montage10x10-translation-and-rotation6.png
rm -f cell*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the pretty image it produces&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;montage10x10-translation-and-rotation6.png&#34; alt=&#34;Montage&#34;&gt;&lt;/p&gt;
&lt;p&gt;$$ But why?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media2.giphy.com/media/vLhYqCSE2YVXi/giphy.gif?cid=ecf05e47jykq81dvo0gtb1ux2ow826objcsa6o7hyp5fhgfo&amp;amp;rid=giphy.gif&amp;amp;ct=g&#34; alt=&#34;Gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Honestly, at this point, it seems like to challenge to work this out on ImageMagick. I know&amp;hellip; a dumb challenge.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random ellipsoids</title>
      <link>http://icaoberg.github.io/post/20210807-random-ellipsoids/</link>
      <pubDate>Sat, 07 Aug 2021 15:07:28 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210807-random-ellipsoids/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I made another. &lt;a href=&#34;https://t.co/DZ9dP7UblL&#34;&gt;pic.twitter.com/DZ9dP7UblL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Iván (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1424113267878858761?ref_src=twsrc%5Etfw&#34;&gt;August 7, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;h1 id=&#34;random-ellipsoids&#34;&gt;Random ellipsoids&lt;/h1&gt;
&lt;p&gt;Yesterday I wrote a random post (see what I did there) about generating random circles using ImageMagick. Today I was thinking, what about random ellipsoids?&lt;/p&gt;
&lt;p&gt;This should be easy to implement, I think.&lt;/p&gt;
&lt;p&gt;Using the script I wrote yesterday,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X=$((1 + $RANDOM % 500))
	Y=$((1 + $RANDOM % 500))
    RADIUS=$((1 + $RANDOM % 100))

	convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y circle 0,0,0,$RADIUS&amp;quot; circles$I.png
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 *.png montage10x10.jpg
rm -f circles*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can make some edits so that it generates ellipsoids and translates them randomly on the screen.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X=$((1 + $RANDOM % 500))
	Y=$((1 + $RANDOM % 500))
        RADIUS=$((1 + $RANDOM % 100))

	convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y ellipse 50,30 40,20 0,360&amp;quot; ellipsoid$I.png
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 ellip*.png montage10x10.jpg
rm -f ellip*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;montage10x10-translation.jpg&#34; alt=&#34;Montage&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ./ellipsoid.sh  12.89s user 3.28s system 169% cpu 9.554 total
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;we-can-rebuild-it-we-have-the-technology&#34;&gt;We can rebuild it&amp;hellip; we have the technology&lt;/h2&gt;
&lt;p&gt;Introducing translation is fine, but without rotation, the ellipsoids look dull. Adding rotation&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X=$((1 + $RANDOM % 500))
	Y=$((1 + $RANDOM % 500))
        ANGLE=$((1 + $RANDOM % 360))
        RADIUS=$((1 + $RANDOM % 100))

	convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y rotate $ANGLE ellipse 50,30 40,20 0,360&amp;quot; ellipsoid$I.png
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 ellip*.png montage10x10-translation-and-rotation.jpg
rm -f ellip*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;makes it look better.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;montage10x10-translation-and-rotation.jpg&#34; alt=&#34;Montage&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, if these are meant to be synthetic primitive cells, then shape is important as well.&lt;/p&gt;
&lt;h2 id=&#34;make-it-so&#34;&gt;Make it so&lt;/h2&gt;
&lt;p&gt;Adding rotation is cool, but what about shape? I guess we can play around the parameters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X=$((256 + $RANDOM % 100))
	Y=$((256 + $RANDOM % 100))
        ANGLE=$((1 + $RANDOM % 360))
        X_RADIUS=$((50 + $RANDOM % 500))
        Y_RADIUS=$((50 + $RANDOM % 500))

	convert -size 1024x1024 xc:black  \
        	    -draw &amp;quot;fill white rotate $ANGLE ellipse $X,$Y $X_RADIUS,$Y_RADIUS 0,360&amp;quot; ellipsoid$I.png
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 ellip*.png montage10x10-translation-and-rotation.png
convert montage10x10-translation-and-rotation.png -scale 50% montage10x10-translation-and-rotation.png
rm -f ellip*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;montage10x10-translation-and-rotation2.png&#34; alt=&#34;Montage&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is more than obvious this synthetic montage will not fool any cell biologist. Looks better than the first picture from yesterday&amp;rsquo;s post though.&lt;/p&gt;
&lt;p&gt;Keep in mind &lt;code&gt;$RANDOM&lt;/code&gt; is always sampling from a uniform distribution, so we can&amp;rsquo;t make prettier pics. An alternative is to find a package to generate random numbers from other distributions or to do this in Python. Either way, I don&amp;rsquo;t think I can make it look prettier than it is at the moment.&lt;/p&gt;
&lt;h2 id=&#34;but-why&#34;&gt;But why?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media0.giphy.com/media/3o6YfYvk4uB415sOTm/giphy.gif?cid=ecf05e47ilvubfvgwo7ivtnyu3m1bahyxkucc6skrl4bjov0&amp;amp;rid=giphy.gif&amp;amp;ct=g&#34; alt=&#34;Bored&#34;&gt;
Again I was bored. And was curious to what extent I could use ImageMagick.&lt;/p&gt;
&lt;p&gt;These scripts are not optimized nor I claim they are. Just in case.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random circles</title>
      <link>http://icaoberg.github.io/post/20210806-random-circles/</link>
      <pubDate>Fri, 06 Aug 2021 21:34:41 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/20210806-random-circles/</guid>
      <description>&lt;h1 id=&#34;basic-script&#34;&gt;Basic script&lt;/h1&gt;
&lt;p&gt;I was cleaning my hard drive and I found this script I wrote a long time ago. It uses ImageMagick to draw a circle.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

convert -size 500x500 xc:black  \
        -draw &amp;quot;fill white circle 0,50,0,32  &amp;quot; circles.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At some point I remember I was trying to draw random circles in squares images to test CellOrganizer. I wondered if there was a way to make this dumb script better.&lt;/p&gt;
&lt;h1 id=&#34;just-a-little-better&#34;&gt;Just a little better&lt;/h1&gt;
&lt;p&gt;By tweaking the script above a little we can change the location of the circle within the image. For example&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
X=$((1 + $RANDOM % 500))
Y=$((1 + $RANDOM % 500))

convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y circle 0,0,0,100  &amp;quot; circles.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the script above generates a circle of radius 100 whose center is randomly generated.&lt;/p&gt;
&lt;p&gt;However, running the script above generates a single image.&lt;/p&gt;
&lt;h3 id=&#34;wait-there-is-more&#34;&gt;Wait.. there is more&lt;/h3&gt;
&lt;p&gt;With some tweaks to the script above we can generate more circles.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..25}
do
	X=$((1 + $RANDOM % 500))
	Y=$((1 + $RANDOM % 500))

	convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y circle 0,0,0,100  &amp;quot; circles$I.png
done

montage -density 300 -tile 5x5 -geometry +5+5 -border 2 *.png montage.jpg
rm -f circles*.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script above will generate the following montage&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;montage.jpg&#34; alt=&#34;Circles&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-about-the-radius&#34;&gt;What about the radius?&lt;/h2&gt;
&lt;p&gt;I guess you can use &lt;code&gt;$RANDOM&lt;/code&gt; to generate random radii. Notice the script below is very similar to the previous, now I am just sampling the random radii.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -x
for I in {1..100}
do
	X=$((1 + $RANDOM % 500))
	Y=$((1 + $RANDOM % 500))
    RADIUS=$((1 + $RANDOM % 100))

	convert -size 500x500 xc:black  \
        	    -draw &amp;quot;fill white translate $X,$Y circle 0,0,0,$RADIUS&amp;quot; circles$I.png
done

montage -density 300 -tile 10x10 -geometry +5+5 -border 2 *.png montage10x10.jpg
rm -f circles*png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script above will generate the following montage montage&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;montage10x10.jpg&#34; alt=&#34;Circles&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;but-why&#34;&gt;But why?&lt;/h2&gt;
&lt;p&gt;Because I was bored. I was trying to remember why I built this, and I seemed to recall I built or explored this with Claire a long time ago.&lt;/p&gt;
&lt;p&gt;At that time we were trying to generate synthetic images that could be used to test CellOrganizer and this was part of our exploration. Mostly because ImageMagick has a small footprint and a small learning curve.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
