<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming | icaoberg AT github DOT io</title>
    <link>http://icaoberg.github.io/categories/programming/</link>
      <atom:link href="http://icaoberg.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <description>Programming</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright Â© 2006-2020 icaoberg AT github DOT io</copyright><lastBuildDate>Tue, 07 Jan 2020 08:00:00 +0000</lastBuildDate>
    <image>
      <url>http://icaoberg.github.io/img/icon-192.png</url>
      <title>Programming</title>
      <link>http://icaoberg.github.io/categories/programming/</link>
    </image>
    
    <item>
      <title>gotop</title>
      <link>http://icaoberg.github.io/post/singularity-gotop/</link>
      <pubDate>Tue, 07 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gotop/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;./logo.png&#34; alt=&#34;Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34;&gt;gotop&lt;/a&gt; is a very useful app that use all the time in our department cluster. Even though I have root privileges in our HPC cluster, I&amp;rsquo;d rather do my computing as a regular user. It keeps you in check and forces me to think like a power/regular user.&lt;/p&gt;

&lt;p&gt;Hence, I use &lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34;&gt;gotop&lt;/a&gt; in a Singularity container.&lt;/p&gt;

&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;

&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gotop&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To facilitate the building your container, you will find two &lt;strong&gt;simple&lt;/strong&gt; scripts in the repository&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rbuild.sh&lt;/code&gt;. Builds the image remotely and then pulls it down locally. You will need access to &lt;a href=&#34;https://cloud.sylabs.io/builder&#34; target=&#34;_blank&#34;&gt;SyLabs.io Remote Builder&lt;/a&gt; to do this. Getting access to the Remote Builder is beyond the scope of this post.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build.sh&lt;/code&gt;. Builds the image locally. You will root privileges to build the container locally.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build the image locally simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292285&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292285.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;

&lt;p&gt;To build the image remotely simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A note on building remotely. Because my script is simple and straightforward, there are no annotations associated with this build. If you were to take a look at my profile in &lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg&#34; target=&#34;_blank&#34;&gt;SyLabs.io&lt;/a&gt; you will notice there is a new project associated with the script above&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This footprint is evidence the image was built remotely. Also notice the download number is 1. This is because running the remote command builds the container and then downloads it locally.&lt;/p&gt;

&lt;h2 id=&#34;running-gotop&#34;&gt;Running gotop&lt;/h2&gt;

&lt;p&gt;To run the app in the container, simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;singularity exec singularity-gotop.simg gotop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292294&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292294.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image size is ~95Mb which is small in relation to the benefits of using the command on demand.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;https://giphy.com/embed/ddHhhUBn25cuQ&#34; width=&#34;480&#34; height=&#34;270&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;br&gt;&lt;strong&gt;Figure 2&lt;/strong&gt;. Celebrating the image was built correctly and I can run gotop.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Matlab Onramp</title>
      <link>http://icaoberg.github.io/post/matlab-onramp/</link>
      <pubDate>Sat, 09 Nov 2019 01:48:55 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/matlab-onramp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Find Files</title>
      <link>http://icaoberg.github.io/post/matlab-find-files/</link>
      <pubDate>Tue, 22 Oct 2019 16:11:26 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/matlab-find-files/</guid>
      <description>&lt;p&gt;I have been using Matlab for so long that I need to update some of my code. Some of the features aren&amp;rsquo;t that new but are certainly more efficient. Loving this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mathworks.com/matlabcentral/answers/32038-can-you-use-dir-to-list-files-in-subfolders&#34; target=&#34;_blank&#34;&gt;Useful link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Programming for Lovers</title>
      <link>http://icaoberg.github.io/post/programming-for-lovers/</link>
      <pubDate>Mon, 14 Oct 2019 15:57:35 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/programming-for-lovers/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;For anyone who wants to follow along to lecture 0 of &lt;a href=&#34;https://twitter.com/hashtag/ProgrammingForLovers?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ProgrammingForLovers&lt;/a&gt; this evening at 8 ET, the public YouTube Live link is at &lt;a href=&#34;https://t.co/wPefWSSnCB&#34;&gt;https://t.co/wPefWSSnCB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Phillip Compeau (@PhillipCompeau) &lt;a href=&#34;https://twitter.com/PhillipCompeau/status/1183859120283279371?ref_src=twsrc%5Etfw&#34;&gt;October 14, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;Today at 8:00p.m., the first Lecture of &lt;strong&gt;Programming for Lovers&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>browsh</title>
      <link>http://icaoberg.github.io/post/singularity-browsh/</link>
      <pubDate>Sun, 13 Oct 2019 01:19:33 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-browsh/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just created and pushed an image to &lt;a href=&#34;https://twitter.com/SylabsIO?ref_src=twsrc%5Etfw&#34;&gt;@SylabsIO&lt;/a&gt; cloud for &lt;a href=&#34;https://twitter.com/brow_sh?ref_src=twsrc%5Etfw&#34;&gt;@brow_sh&lt;/a&gt;, an amazing fully-modern text-based browser developed by &lt;a href=&#34;https://twitter.com/twombh?ref_src=twsrc%5Etfw&#34;&gt;@twombh&lt;/a&gt; &lt;a href=&#34;https://t.co/0FxdxDqO8U&#34;&gt;pic.twitter.com/0FxdxDqO8U&lt;/a&gt;&lt;/p&gt;&amp;mdash; justahappygeek (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1183250309612789765?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;Here is the deal, I have been using &lt;a href=&#34;http://lynx.browser.org/&#34; target=&#34;_blank&#34;&gt;Lynx&lt;/a&gt; since forever. Just because. However today I found about &lt;a href=&#34;https://www.brow.sh/&#34; target=&#34;_blank&#34;&gt;browsh&lt;/a&gt;. What a joyous moment!&lt;/p&gt;

&lt;p&gt;Finally a browser I would feel happy running on the HPC cluster. As always, I think Singularity is the best way to deploy tools like this for larger machines (especially if you are a user without root privileges).&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/singularity-browsh&#34; target=&#34;_blank&#34;&gt;GitHub source code repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg/default/browsh&#34; target=&#34;_blank&#34;&gt;SyLabs.io Cloud image repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cody</title>
      <link>http://icaoberg.github.io/post/cody/</link>
      <pubDate>Thu, 26 Sep 2019 02:10:48 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/cody/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mathworks.com/matlabcentral/cody/&#34; target=&#34;_blank&#34;&gt;Mathworks Cody&lt;/a&gt; is a platform for having fun with Matlab. I mean I am having fun. I think it is similar to LeetCode or HackerRank. Main difference is, it is meant for Matlab.&lt;/p&gt;

&lt;p&gt;Some of these exercises are simple -so far-. I like these kind of sites because it keep my old brain active.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CellOrganizer for Singularity</title>
      <link>http://icaoberg.github.io/post/singularity-retweet-ceo/</link>
      <pubDate>Sat, 21 Sep 2019 00:20:50 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-retweet-ceo/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I have been using Matlab for about 18 years to do anything and everything. Currently, I am using it to develop &lt;a href=&#34;https://twitter.com/CellOrganizer?ref_src=twsrc%5Etfw&#34;&gt;@CellOrganizer&lt;/a&gt; along with CellOrganizer for &lt;a href=&#34;https://twitter.com/ProjectJupyter?ref_src=twsrc%5Etfw&#34;&gt;@ProjectJupyter&lt;/a&gt; on  &lt;a href=&#34;https://twitter.com/Docker?ref_src=twsrc%5Etfw&#34;&gt;@docker&lt;/a&gt;, CellOrganizer for &lt;a href=&#34;https://twitter.com/galaxyproject?ref_src=twsrc%5Etfw&#34;&gt;@galaxyproject&lt;/a&gt; and CellOrganizer on &lt;a href=&#34;https://twitter.com/SingularityApp?ref_src=twsrc%5Etfw&#34;&gt;@SingularityApp&lt;/a&gt;. All part of &lt;a href=&#34;https://twitter.com/MMBioS?ref_src=twsrc%5Etfw&#34;&gt;@MMBioS&lt;/a&gt; &lt;a href=&#34;https://t.co/qSUGxgmeAX&#34;&gt;pic.twitter.com/qSUGxgmeAX&lt;/a&gt;&lt;/p&gt;&amp;mdash; justahappygeek (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1174705344339161089?ref_src=twsrc%5Etfw&#34;&gt;September 19, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;P.S. I got retweeted by the official Singularity account on Twitter as well as their CEO. What a time to be alive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker - Matlab MCR 2019b</title>
      <link>http://icaoberg.github.io/post/docker-matlabmcr2019b/</link>
      <pubDate>Fri, 20 Sep 2019 21:17:12 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/docker-matlabmcr2019b/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;github-card&#34; data-github=&#34;icaoberg/docker-matlabmcr2019b&#34; data-width=&#34;400&#34; data-height=&#34;153&#34; data-theme=&#34;default&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;//cdn.jsdelivr.net/github-cards/latest/widget.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Mathworks release version 2019b a few days ago. Alas, here are the links to the Docker and Singularity images. I hope there is someone out there that find these useful.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/docker-matlabmcr2019b&#34; target=&#34;_blank&#34;&gt;Dockerfile on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.docker.com/u/icaoberg/repository/docker/icaoberg/matlabmcr2019b&#34; target=&#34;_blank&#34;&gt;Docker image on DockerHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/singularity-matlabmcr2019b&#34; target=&#34;_blank&#34;&gt;Singularity recipe on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg/default/matlabmcr2019b&#34; target=&#34;_blank&#34;&gt;Singularity image on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Bio-Formats command line tools to validate OME-TIFF images</title>
      <link>http://icaoberg.github.io/post/bioformats-cli-ome-tiff-images/</link>
      <pubDate>Sat, 10 Dec 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/bioformats-cli-ome-tiff-images/</guid>
      <description>

&lt;p&gt;We have added new functionality to CellOrganizer, including the possibility to save synthetic images as OME-TIFF. The header in an OME-TIFF file is an XML snippet that follows the OME data model.We have added new functionality to CellOrganizer, including the possibility to save synthetic images as OME-TIFF. The header in an OME-TIFF file is an XML snippet that follows the &lt;a href=&#34;http://www.openmicroscopy.org/site/support/ome-model/&#34; target=&#34;_blank&#34;&gt;OME data model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To generate OME-TIFF files in CellOrganizer, make sure that the correct output flag is set to true&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options.output.OMETIFF = true;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;demo3d34&#34;&gt;demo3D34&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot1.jpg&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In CellOrganizer, demo3D34 synthesizes an image and saves it as an OME-TIFF.&lt;/p&gt;

&lt;p&gt;To validate the OME.tiff we use &lt;a href=&#34;http://www.openmicroscopy.org/site/support/bio-formats5.2/users/comlinetools/&#34; target=&#34;_blank&#34;&gt;Bioformats command line tools&lt;/a&gt;, especifically&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;xmlvalid&lt;/strong&gt;. A command-line XML validation tool, useful for checking an OME-XML document for compliance with the OME-XML schema.
This tool will validate the XML snippet in the header against the OME data model schema. The XML header attached to this example is&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This tool will validate the XML snippet in the header against the OME data model schema. The XML header attached to this example is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;!-- Warning: this comment is an OME-XML metadata block, which contains crucial dimensional parameters and other important metadata. Please edit cautiously (if at all), and back up the original data before doing so. For more information, see the OME-TIFF web site: http://www.openmicroscopy.org/site/support/ome-model/ome-tiff/. --&amp;gt;&amp;lt;OME xmlns=&amp;quot;http://www.openmicroscopy.org/Schemas/OME/2016-06&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; Creator=&amp;quot;OME Bio-Formats 5.2.4&amp;quot; UUID=&amp;quot;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;quot; xsi:schemaLocation=&amp;quot;http://www.openmicroscopy.org/Schemas/OME/2016-06 http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd&amp;quot;&amp;gt;&amp;lt;Image ID=&amp;quot;Image:0&amp;quot;&amp;gt;&amp;lt;Pixels BigEndian=&amp;quot;true&amp;quot; DimensionOrder=&amp;quot;XYZCT&amp;quot; ID=&amp;quot;Pixels:0&amp;quot; PhysicalSizeX=&amp;quot;0.049&amp;quot; PhysicalSizeXUnit=&amp;quot;Âµm&amp;quot; PhysicalSizeY=&amp;quot;0.049&amp;quot; PhysicalSizeYUnit=&amp;quot;Âµm&amp;quot; PhysicalSizeZ=&amp;quot;0.2&amp;quot; PhysicalSizeZUnit=&amp;quot;Âµm&amp;quot; SizeC=&amp;quot;3&amp;quot; SizeT=&amp;quot;1&amp;quot; SizeX=&amp;quot;696&amp;quot; SizeY=&amp;quot;563&amp;quot; SizeZ=&amp;quot;10&amp;quot; Type=&amp;quot;uint8&amp;quot;&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:0&amp;quot; Name=&amp;quot;cell&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:1&amp;quot; Name=&amp;quot;nucleus&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:2&amp;quot; Name=&amp;quot;vesicle1&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;0&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;1&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;2&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;3&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;4&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;5&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;6&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;7&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;8&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;9&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;10&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;11&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;12&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;13&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;14&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;15&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;16&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;17&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;18&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;19&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;20&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;21&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;22&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;23&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;24&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;25&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;26&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;27&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;28&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;29&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;/Pixels&amp;gt;&amp;lt;/Image&amp;gt;&amp;lt;/OME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running xmlvalid against the OME-TIFF file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./xmlvalid cell1.ome.tif
Parsing schema path
http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd
Validating cell1.ome.tif
No validation errors found.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Installing R v3.2.3</title>
      <link>http://icaoberg.github.io/post/installing-r-3.2.3/</link>
      <pubDate>Tue, 12 Apr 2016 05:34:42 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/installing-r-3.2.3/</guid>
      <description>&lt;p&gt;If you want to install R 3.2.3 in your home directory in the CBD cluster, then you can use the following script.&lt;/p&gt;

&lt;p&gt;Feel free to modify it as needed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

## Ivan E. Cao-Berg (icaoberg@scs.cmu.edu)
## Copyright (C) 2016
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published
## by the Free Software Foundation; either version 2 of the License,
## or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
## 02110-1301, USA.

if [ ! -d ~/bin ]; then
	mkdir ~/bin
fi
cd ~/bin

wget -nc https://cran.rstudio.com/src/base/R-3/R-3.2.3.tar.gz
tar -xvf R-3.2.3.tar.gz
cd R-3.2.3
./configure
make

ln -s ~/bin/R-3.2.3/bin/R ~/bin/R
ln -s ~/bin/R-3.2.3/bin/Rcmd ~/bin/Rcmd
ln -s ~/bin/R-3.2.3/bin/Rd2pdf ~/bin/Rd2pdf
ln -s ~/bin/R-3.2.3/bin/Rprof ~/bin/Rprof
ln -s ~/bin/R-3.2.3/bin/Rscript ~/bin/Rscript
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can run these commands in terminal to get the script and submit to the scheduler&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://gist.github.com/d3e4812911a691d4deff.git
cd d3e4812911a691d4deff
sbatch -p pool1 -o ./install_R.3.2.3.out ./script.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the installation was successful, then you should be able to run R&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[icaoberg ~]$ ~/bin/R

R version 3.2.3 (2015-12-10) -- &amp;quot;Wooden Christmas-Tree&amp;quot;
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type &#39;license()&#39; or &#39;licence()&#39; for distribution details.

Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type &#39;contributors()&#39; for more information and
&#39;citation()&#39; on how to cite R or R packages in publications.

Type &#39;demo()&#39; for some demos, &#39;help()&#39; for on-line help, or
&#39;help.start()&#39; for an HTML browser interface to help.
Type &#39;q()&#39; to quit R.

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Making an OME.TIFF using Bioformats</title>
      <link>http://icaoberg.github.io/post/making-ometiff-using-demo3d01/</link>
      <pubDate>Wed, 09 Mar 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/making-ometiff-using-demo3d01/</guid>
      <description>&lt;p&gt;In the previous example we used a 2D multitiff to make an OME.tiff.  In this example we are going to use the files generated by demo3D01.&lt;/p&gt;

&lt;p&gt;In this script we are loading each file, one by one, and then we are concatenating them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;files = { &#39;nucleus.tif&#39;, &#39;cell.tif&#39;, &#39;lysosome.tif&#39;, &#39;endosome.tif&#39;, ...
    &#39;mitochondrion.tif&#39;, &#39;nucleoli.tif&#39; };
addpath( &#39;./bfmatlab&#39; );
omeimg = [];
for c=1:1:numel(files)
    file = files{c};
    img = tif2img( file );
    for z=1:1:size(img,3)
        %remember the indices mean xyzct
        omeimg(:,:,z,c,1) = img(:,:,z);
    end
end
bfsave( omeimg, &#39;demo3D01.ome.tif&#39;, &#39;Compression&#39;, &#39;LZW&#39; );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can probably optimize the snippet. We want to use the compression option to make a smaller file. Using compression you get&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ du -h demo3D01.ome.tif
 14M  demo3D01.ome.tif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Without compression&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ du -h demo3D01.ome.tif
423M  demo3D01.ome.tif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like the previous example, then you can import the image to the server&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making an OME.TIFF using Bioformats</title>
      <link>http://icaoberg.github.io/post/making-ometiff-using-demo2d00/</link>
      <pubDate>Tue, 08 Mar 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/making-ometiff-using-demo2d00/</guid>
      <description>

&lt;p&gt;For this example I am using the image generated by CellOrganizerâs demo2D00.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; help demo2D00
 demo2D00
 
 Synthesize one 2D image from all object models. Results will be one TIFF file, with six slices, one each for cell boundary, nuclear boundary, nucleoli, mitochondria, lysosomes, and endosomes.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which generate one multitiff file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; setup;
demo2D00()
Checking for new stable version. Version is up to date.
Checking existence of log folder
Making log directory /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/log
Checking the validity of input files
Parsing SLML instances
Checking existence of temporary folder
Creating temporary folder in: /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/temp
Setting target directory to: /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/images
Setting prefix to: demo2D00_
Setting number of synthesized images to: 1
Setting compression to: lzw
Synthesizing image 1. Please wait, this might take several minutes.
Setting model dimensionality to 2D
Checking all models have the same dimensionality
Generating cell shape
Removing temporary files
Closing log file.
Finished synthesis
Elapsed time is 16.146033 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The generated image is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; img = tif2img( &#39;demo2D001.tif&#39; );
&amp;gt;&amp;gt; whos img
  Name        Size                  Bytes  Class     Attributes
  img       778x758x6            28306752  double
&amp;gt;&amp;gt; imshow( reshape( img, size(img,1),[] ) )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;demo2D00.jpg&#34; alt=&#34;OMETIFF&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;intro-to-bio-formats&#34;&gt;Intro to Bio-Formats&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;bio-formats-logo-on-white-800.png&#34; alt=&#34;Bio-Formats&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The important thing to keep in mind is that the pixel data in an OMERO image is essentially a 5D array, where the information is stored as xyzct.&lt;/p&gt;

&lt;p&gt;Since we are not saving any metadata in the OME.tiff, we can save the pixel data in three steps&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the original synthetic image generated from CellOrganizer&lt;/li&gt;
&lt;li&gt;Reshape the pixel data to a 5D array&lt;/li&gt;
&lt;li&gt;Save the pixel data using BioFormats&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reading-and-saving-the-data-as-an-ome-tiff&#34;&gt;Reading and saving the data as an OME.tiff&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;img = tif2img( &#39;demo2D001.tif&#39; );
addpath( &#39;./bfmatlab&#39; );
omeimg = [];
for i=1:1:size(img,3)
    %remember the indices mean xyzct
    omeimg(:,:,1,i,1) = img(:,:,i);
end
bfsave( omeimg, &#39;demo2D001.ome.tif&#39; );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above snippet generates a valid OME.tiff. You can then use OMERO.importer to import the image to the server
&lt;img src=&#34;screenshot1.png&#34; alt=&#34;screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once the image has been imported, you should be able to use OMERO.insight to see it
&lt;img src=&#34;screenshot2.png&#34; alt=&#34;screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can double click on the image thumbnail to open the full viewer
&lt;img src=&#34;screenshot3.png&#34; alt=&#34;screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the six colored buttons to the right. Those represent the different channels. At the bottom of the screen you can also notice the string âZ=&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1&lt;/sub&gt;, T=1/1â. This means we successfully made and imported a single time point 2D image with 6 channels.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GraphViz-like tools for Matlab</title>
      <link>http://icaoberg.github.io/post/graphviz-for-matlab/</link>
      <pubDate>Tue, 16 Feb 2016 05:52:23 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/graphviz-for-matlab/</guid>
      <description>

&lt;p&gt;You can use Matlabâs profile function to get some useful information about your scripts.&lt;/p&gt;

&lt;p&gt;For example, running the profiler around CellOrganizerâs demo2D00&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; profile on; 
&amp;gt;&amp;gt; demo2D00(); 
&amp;gt;&amp;gt; profile off; 
&amp;gt;&amp;gt; profview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will produce a report similar to this one&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./profile.png&#34; alt=&#34;Profile&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Report from running a profile on demo2D00.&lt;/p&gt;

&lt;p&gt;But sometimes you want something visual. Andâ¦. here comes &lt;a href=&#34;http://www.mathworks.com/matlabcentral/fileexchange/27608-graphviz-like-tools-for-matlab&#34; target=&#34;_blank&#34;&gt;GraphViz-like tools for MATLAB&lt;/a&gt; to the rescue!&lt;/p&gt;

&lt;p&gt;GraphViz-like tools for Matlab â[â¦] creates a GraphViz dot language representation of the dependencies of a function.â&lt;/p&gt;

&lt;p&gt;Using this tool is very straightforward, all you need to do is download the toolkit along with its dependencies; &lt;a href=&#34;http://www.mathworks.com/matlabcentral/fileexchange/17291-fdep--a-pedestrian-function-dependencies-finder&#34; target=&#34;_blank&#34;&gt;fdep: a pedestrian function dependencies finder&lt;/a&gt; and &lt;a href=&#34;http://www.graphviz.org/&#34; target=&#34;_blank&#34;&gt;GraphViz&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Before we start you need&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mathworks.com/&#34; target=&#34;_blank&#34;&gt;Matlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tested the toolkit in Matlab 2014b for Mac.  This shell script will download the toolkit and its two dependencies. Assuming you are using HomeBrew, it is will also install GraphViz&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/27608/versions/2/download/zip/docsgen_dot_tools.zip
unzip -o docsgen_dot_tools.zip
rm -f docsgen_dot_tools.zip
wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/24652/versions/4/download/zip/drawDot.zip
unzip -o drawDot.zip
rm -f drawDot.zip
wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/17291/versions/8/download/zip/fdep_21jun2010.zip
unzip -o fdep_21jun2010.zip
rm -f fdep_21jun2010.zip
brew install graphviz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the above commands were successful, then you should see the following files as well as the dot binary.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls
drawDot.m  hfdep    mGraphViz.m  script.sh  tfdep2.m  tfdep4.m
fdep.m    license.txt  mkdotfile.m  tfdep1.m  tfdep3.m
$ which dot
/usr/local/bin/dot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;p&gt;This example makes the graph from a file in my desktop. Make sure the file save in the variable ifile exists before running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;
ifile = &#39;~/Desktop/script.m&#39;;
if exist( ifile )
  ofile = &#39;graph.dot&#39;;
  txt = mkdotfile( ifile, ofile );
  system( [dot -Tjpg graph.dot -o graph.jpg] );
  exit;&amp;quot; &amp;gt; make_graph.m
end
matlab -nodesktop -nosplash -r &amp;quot;make_dot_graph;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result from running the script above is the graph below&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./featured.jpg&#34; alt=&#34;Graph&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Result from running GraphViz-like tools for MATLAB on CellOrganizerâs demo2D00.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
