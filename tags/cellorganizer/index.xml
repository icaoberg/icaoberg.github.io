<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cellorganizer | icaoberg AT github DOT io</title>
    <link>http://icaoberg.github.io/tags/cellorganizer/</link>
      <atom:link href="http://icaoberg.github.io/tags/cellorganizer/index.xml" rel="self" type="application/rss+xml" />
    <description>cellorganizer</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright © 2006-2020 icaoberg AT github DOT io</copyright><lastBuildDate>Mon, 04 May 2020 08:00:00 +0000</lastBuildDate>
    <image>
      <url>http://icaoberg.github.io/img/icon-192.png</url>
      <title>cellorganizer</title>
      <link>http://icaoberg.github.io/tags/cellorganizer/</link>
    </image>
    
    <item>
      <title>CellOrganizer</title>
      <link>http://icaoberg.github.io/talk/2020-california-cellorganizer/</link>
      <pubDate>Mon, 04 May 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/talk/2020-california-cellorganizer/</guid>
      <description>&lt;p&gt;This workshop covers theory and practice for the design and simulation of cell models focused on diffusion-reaction systems such as neurotransmission, signaling cascades, and other forms of biochemical networks.&lt;/p&gt;

&lt;p&gt;During the workshop, participants will learn how to use the tools developed by MMBioS to create, run, and analyze models of cellular microphysiology and apply them to their own research questions. The workshop focuses on the following tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The MCell simulation environment, including new Monte Carlo methods for 3-D simulation of reactions in solution and on arbitrarily shaped biological surfaces. The newest version of CellBlender our MCell model creation and visualization framework.&lt;/li&gt;
&lt;li&gt;The BioNetGen software for specifying, simulating, and analyzing biochemical networks using a modular, rule-based approach.&lt;/li&gt;
&lt;li&gt;The CellOrganizer system for creating image-derived models of cell shape and intracellular organization that can be used to compare cell populations and to create cell simulations for diverse cell geometries to explore the effect of variation in cell organization on microphysiology.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This workshop will span four full days, and attendees are encouraged to bring ideas/data for their own simulation projects. The daily schedule includes theoretical and practical lectures, instructor-guided hands-on tutorials, and opportunities for one-on-one interaction with the instructors for individual project development.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Bio-Formats command line tools to validate OME-TIFF images</title>
      <link>http://icaoberg.github.io/post/bioformats-cli-ome-tiff-images/</link>
      <pubDate>Sat, 10 Dec 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/bioformats-cli-ome-tiff-images/</guid>
      <description>

&lt;p&gt;We have added new functionality to CellOrganizer, including the possibility to save synthetic images as OME-TIFF. The header in an OME-TIFF file is an XML snippet that follows the OME data model.We have added new functionality to CellOrganizer, including the possibility to save synthetic images as OME-TIFF. The header in an OME-TIFF file is an XML snippet that follows the &lt;a href=&#34;http://www.openmicroscopy.org/site/support/ome-model/&#34; target=&#34;_blank&#34;&gt;OME data model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To generate OME-TIFF files in CellOrganizer, make sure that the correct output flag is set to true&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options.output.OMETIFF = true;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;demo3d34&#34;&gt;demo3D34&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot1.jpg&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In CellOrganizer, demo3D34 synthesizes an image and saves it as an OME-TIFF.&lt;/p&gt;

&lt;p&gt;To validate the OME.tiff we use &lt;a href=&#34;http://www.openmicroscopy.org/site/support/bio-formats5.2/users/comlinetools/&#34; target=&#34;_blank&#34;&gt;Bioformats command line tools&lt;/a&gt;, especifically&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;xmlvalid&lt;/strong&gt;. A command-line XML validation tool, useful for checking an OME-XML document for compliance with the OME-XML schema.
This tool will validate the XML snippet in the header against the OME data model schema. The XML header attached to this example is&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This tool will validate the XML snippet in the header against the OME data model schema. The XML header attached to this example is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;!-- Warning: this comment is an OME-XML metadata block, which contains crucial dimensional parameters and other important metadata. Please edit cautiously (if at all), and back up the original data before doing so. For more information, see the OME-TIFF web site: http://www.openmicroscopy.org/site/support/ome-model/ome-tiff/. --&amp;gt;&amp;lt;OME xmlns=&amp;quot;http://www.openmicroscopy.org/Schemas/OME/2016-06&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; Creator=&amp;quot;OME Bio-Formats 5.2.4&amp;quot; UUID=&amp;quot;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;quot; xsi:schemaLocation=&amp;quot;http://www.openmicroscopy.org/Schemas/OME/2016-06 http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd&amp;quot;&amp;gt;&amp;lt;Image ID=&amp;quot;Image:0&amp;quot;&amp;gt;&amp;lt;Pixels BigEndian=&amp;quot;true&amp;quot; DimensionOrder=&amp;quot;XYZCT&amp;quot; ID=&amp;quot;Pixels:0&amp;quot; PhysicalSizeX=&amp;quot;0.049&amp;quot; PhysicalSizeXUnit=&amp;quot;µm&amp;quot; PhysicalSizeY=&amp;quot;0.049&amp;quot; PhysicalSizeYUnit=&amp;quot;µm&amp;quot; PhysicalSizeZ=&amp;quot;0.2&amp;quot; PhysicalSizeZUnit=&amp;quot;µm&amp;quot; SizeC=&amp;quot;3&amp;quot; SizeT=&amp;quot;1&amp;quot; SizeX=&amp;quot;696&amp;quot; SizeY=&amp;quot;563&amp;quot; SizeZ=&amp;quot;10&amp;quot; Type=&amp;quot;uint8&amp;quot;&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:0&amp;quot; Name=&amp;quot;cell&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:1&amp;quot; Name=&amp;quot;nucleus&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;Channel ID=&amp;quot;Channel:0:2&amp;quot; Name=&amp;quot;vesicle1&amp;quot; SamplesPerPixel=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;LightPath/&amp;gt;&amp;lt;/Channel&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;0&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;1&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;2&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;3&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;4&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;5&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;6&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;7&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;8&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;0&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;9&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;10&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;11&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;12&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;13&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;14&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;15&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;16&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;17&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;18&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;1&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;19&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;0&amp;quot; IFD=&amp;quot;20&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;1&amp;quot; IFD=&amp;quot;21&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;2&amp;quot; IFD=&amp;quot;22&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;3&amp;quot; IFD=&amp;quot;23&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;4&amp;quot; IFD=&amp;quot;24&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;5&amp;quot; IFD=&amp;quot;25&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;6&amp;quot; IFD=&amp;quot;26&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;7&amp;quot; IFD=&amp;quot;27&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;8&amp;quot; IFD=&amp;quot;28&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;TiffData FirstC=&amp;quot;2&amp;quot; FirstT=&amp;quot;0&amp;quot; FirstZ=&amp;quot;9&amp;quot; IFD=&amp;quot;29&amp;quot; PlaneCount=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;UUID FileName=&amp;quot;cell1.ome.tif&amp;quot;&amp;gt;urn:uuid:49279097-4296-40f5-920b-aa60b3c3850c&amp;lt;/UUID&amp;gt;&amp;lt;/TiffData&amp;gt;&amp;lt;/Pixels&amp;gt;&amp;lt;/Image&amp;gt;&amp;lt;/OME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running xmlvalid against the OME-TIFF file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./xmlvalid cell1.ome.tif
Parsing schema path
http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd
Validating cell1.ome.tif
No validation errors found.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Making an OME.TIFF using Bioformats</title>
      <link>http://icaoberg.github.io/post/making-ometiff-using-demo3d01/</link>
      <pubDate>Wed, 09 Mar 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/making-ometiff-using-demo3d01/</guid>
      <description>&lt;p&gt;In the previous example we used a 2D multitiff to make an OME.tiff.  In this example we are going to use the files generated by demo3D01.&lt;/p&gt;

&lt;p&gt;In this script we are loading each file, one by one, and then we are concatenating them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;files = { &#39;nucleus.tif&#39;, &#39;cell.tif&#39;, &#39;lysosome.tif&#39;, &#39;endosome.tif&#39;, ...
    &#39;mitochondrion.tif&#39;, &#39;nucleoli.tif&#39; };
addpath( &#39;./bfmatlab&#39; );
omeimg = [];
for c=1:1:numel(files)
    file = files{c};
    img = tif2img( file );
    for z=1:1:size(img,3)
        %remember the indices mean xyzct
        omeimg(:,:,z,c,1) = img(:,:,z);
    end
end
bfsave( omeimg, &#39;demo3D01.ome.tif&#39;, &#39;Compression&#39;, &#39;LZW&#39; );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can probably optimize the snippet. We want to use the compression option to make a smaller file. Using compression you get&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ du -h demo3D01.ome.tif
 14M  demo3D01.ome.tif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Without compression&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ du -h demo3D01.ome.tif
423M  demo3D01.ome.tif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like the previous example, then you can import the image to the server&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making an OME.TIFF using Bioformats</title>
      <link>http://icaoberg.github.io/post/making-ometiff-using-demo2d00/</link>
      <pubDate>Tue, 08 Mar 2016 13:46:38 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/making-ometiff-using-demo2d00/</guid>
      <description>

&lt;p&gt;For this example I am using the image generated by CellOrganizer’s demo2D00.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; help demo2D00
 demo2D00
 
 Synthesize one 2D image from all object models. Results will be one TIFF file, with six slices, one each for cell boundary, nuclear boundary, nucleoli, mitochondria, lysosomes, and endosomes.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which generate one multitiff file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; setup;
demo2D00()
Checking for new stable version. Version is up to date.
Checking existence of log folder
Making log directory /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/log
Checking the validity of input files
Parsing SLML instances
Checking existence of temporary folder
Creating temporary folder in: /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/temp
Setting target directory to: /Users/icaoberg/Desktop/cellorganizer/demos/2D/demo2D00/images
Setting prefix to: demo2D00_
Setting number of synthesized images to: 1
Setting compression to: lzw
Synthesizing image 1. Please wait, this might take several minutes.
Setting model dimensionality to 2D
Checking all models have the same dimensionality
Generating cell shape
Removing temporary files
Closing log file.
Finished synthesis
Elapsed time is 16.146033 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The generated image is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; img = tif2img( &#39;demo2D001.tif&#39; );
&amp;gt;&amp;gt; whos img
  Name        Size                  Bytes  Class     Attributes
  img       778x758x6            28306752  double
&amp;gt;&amp;gt; imshow( reshape( img, size(img,1),[] ) )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;demo2D00.jpg&#34; alt=&#34;OMETIFF&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;intro-to-bio-formats&#34;&gt;Intro to Bio-Formats&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;bio-formats-logo-on-white-800.png&#34; alt=&#34;Bio-Formats&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The important thing to keep in mind is that the pixel data in an OMERO image is essentially a 5D array, where the information is stored as xyzct.&lt;/p&gt;

&lt;p&gt;Since we are not saving any metadata in the OME.tiff, we can save the pixel data in three steps&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the original synthetic image generated from CellOrganizer&lt;/li&gt;
&lt;li&gt;Reshape the pixel data to a 5D array&lt;/li&gt;
&lt;li&gt;Save the pixel data using BioFormats&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reading-and-saving-the-data-as-an-ome-tiff&#34;&gt;Reading and saving the data as an OME.tiff&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;img = tif2img( &#39;demo2D001.tif&#39; );
addpath( &#39;./bfmatlab&#39; );
omeimg = [];
for i=1:1:size(img,3)
    %remember the indices mean xyzct
    omeimg(:,:,1,i,1) = img(:,:,i);
end
bfsave( omeimg, &#39;demo2D001.ome.tif&#39; );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above snippet generates a valid OME.tiff. You can then use OMERO.importer to import the image to the server
&lt;img src=&#34;screenshot1.png&#34; alt=&#34;screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once the image has been imported, you should be able to use OMERO.insight to see it
&lt;img src=&#34;screenshot2.png&#34; alt=&#34;screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can double click on the image thumbnail to open the full viewer
&lt;img src=&#34;screenshot3.png&#34; alt=&#34;screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the six colored buttons to the right. Those represent the different channels. At the bottom of the screen you can also notice the string “Z=&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1&lt;/sub&gt;, T=1/1”. This means we successfully made and imported a single time point 2D image with 6 channels.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GraphViz-like tools for Matlab</title>
      <link>http://icaoberg.github.io/post/graphviz-for-matlab/</link>
      <pubDate>Tue, 16 Feb 2016 05:52:23 -0500</pubDate>
      <guid>http://icaoberg.github.io/post/graphviz-for-matlab/</guid>
      <description>

&lt;p&gt;You can use Matlab’s profile function to get some useful information about your scripts.&lt;/p&gt;

&lt;p&gt;For example, running the profiler around CellOrganizer’s demo2D00&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; profile on; 
&amp;gt;&amp;gt; demo2D00(); 
&amp;gt;&amp;gt; profile off; 
&amp;gt;&amp;gt; profview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will produce a report similar to this one&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./profile.png&#34; alt=&#34;Profile&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Report from running a profile on demo2D00.&lt;/p&gt;

&lt;p&gt;But sometimes you want something visual. And…. here comes &lt;a href=&#34;http://www.mathworks.com/matlabcentral/fileexchange/27608-graphviz-like-tools-for-matlab&#34; target=&#34;_blank&#34;&gt;GraphViz-like tools for MATLAB&lt;/a&gt; to the rescue!&lt;/p&gt;

&lt;p&gt;GraphViz-like tools for Matlab “[…] creates a GraphViz dot language representation of the dependencies of a function.”&lt;/p&gt;

&lt;p&gt;Using this tool is very straightforward, all you need to do is download the toolkit along with its dependencies; &lt;a href=&#34;http://www.mathworks.com/matlabcentral/fileexchange/17291-fdep--a-pedestrian-function-dependencies-finder&#34; target=&#34;_blank&#34;&gt;fdep: a pedestrian function dependencies finder&lt;/a&gt; and &lt;a href=&#34;http://www.graphviz.org/&#34; target=&#34;_blank&#34;&gt;GraphViz&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Before we start you need&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mathworks.com/&#34; target=&#34;_blank&#34;&gt;Matlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tested the toolkit in Matlab 2014b for Mac.  This shell script will download the toolkit and its two dependencies. Assuming you are using HomeBrew, it is will also install GraphViz&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/27608/versions/2/download/zip/docsgen_dot_tools.zip
unzip -o docsgen_dot_tools.zip
rm -f docsgen_dot_tools.zip
wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/24652/versions/4/download/zip/drawDot.zip
unzip -o drawDot.zip
rm -f drawDot.zip
wget -nc http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/17291/versions/8/download/zip/fdep_21jun2010.zip
unzip -o fdep_21jun2010.zip
rm -f fdep_21jun2010.zip
brew install graphviz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the above commands were successful, then you should see the following files as well as the dot binary.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls
drawDot.m  hfdep    mGraphViz.m  script.sh  tfdep2.m  tfdep4.m
fdep.m    license.txt  mkdotfile.m  tfdep1.m  tfdep3.m
$ which dot
/usr/local/bin/dot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;p&gt;This example makes the graph from a file in my desktop. Make sure the file save in the variable ifile exists before running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;
ifile = &#39;~/Desktop/script.m&#39;;
if exist( ifile )
  ofile = &#39;graph.dot&#39;;
  txt = mkdotfile( ifile, ofile );
  system( [dot -Tjpg graph.dot -o graph.jpg] );
  exit;&amp;quot; &amp;gt; make_graph.m
end
matlab -nodesktop -nosplash -r &amp;quot;make_dot_graph;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result from running the script above is the graph below&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./featured.jpg&#34; alt=&#34;Graph&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Result from running GraphViz-like tools for MATLAB on CellOrganizer’s demo2D00.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
