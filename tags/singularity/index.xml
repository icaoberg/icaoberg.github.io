<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>singularity | icaoberg AT github DOT io</title>
    <link>http://icaoberg.github.io/tags/singularity/</link>
      <atom:link href="http://icaoberg.github.io/tags/singularity/index.xml" rel="self" type="application/rss+xml" />
    <description>singularity</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright Â© 2006-2020 icaoberg AT github DOT io</copyright><lastBuildDate>Mon, 03 Feb 2020 18:00:00 +0000</lastBuildDate>
    <image>
      <url>http://icaoberg.github.io/img/icon-192.png</url>
      <title>singularity</title>
      <link>http://icaoberg.github.io/tags/singularity/</link>
    </image>
    
    <item>
      <title>bedtools</title>
      <link>http://icaoberg.github.io/post/singularity-bedtools-update/</link>
      <pubDate>Mon, 03 Feb 2020 18:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-bedtools-update/</guid>
      <description>

&lt;h2 id=&#34;about-bedtools&#34;&gt;About bedtools&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;logo.png&#34; alt=&#34;Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Collectively, the &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;bedtools&lt;/a&gt; utilities are a swiss-army knife of tools for a wide-range of genomics analysis tasks. The most widely-used tools enable genome arithmetic: that is, set theory on the genome. For example, bedtools allows one to intersect, merge, count, complement, and shuffle genomic intervals from multiple files in widely-used genomic file formats such as BAM, BED, GFF/GTF, VCF. While each individual tool is designed to do a relatively simple task (e.g., intersect two interval files), quite sophisticated analyses can be conducted by combining multiple bedtools operations on the UNIX command line.&lt;/p&gt;

&lt;h2 id=&#34;okay-hear-me-out&#34;&gt;Okay&amp;hellip; hear me out&lt;/h2&gt;

&lt;p&gt;Ok, so I added two simple examples to the repo to make sure users can test the Singularity image. However I need to either learn how to use the test section of the recipe of find a useful way to run tests. Kind of challenging if I want to keep it simple.&lt;/p&gt;

&lt;h3 id=&#34;example02-sh&#34;&gt;example02.sh&lt;/h3&gt;

&lt;p&gt;The shell script below is pretty simple&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# icaoberg - this example is fork that uses a bedtools in a Singularity container
CONTAINER=../../singularity-bedtools.simg

echo &amp;quot;chr1	10	50	10&amp;quot; &amp;gt; a.bed
echo &amp;quot;chr1	20	40	20&amp;quot; &amp;gt; b.bed
echo &amp;quot;chr1	30	33	30&amp;quot; &amp;gt; c.bed

# Find the sub-intervals shared and unique to each file.
if [ -f $CONTAINER ]; then
	singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed | column -t
fi

# Intersect the sub-intervals with the original intervals to collect the scores
if [ -f $CONTAINER ]; then
	singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed \
    | singularity run --app bedtools $CONTAINER intersect -a - -b a.bed b.bed c.bed -wa -wb \
    | column -t
fi

# Grooupby the sub-intervals with the mean score from each of the original files.
if [ -f $CONTAINER ]; then
        singularity run --app bedtools $CONTAINER multiinter -i a.bed b.bed c.bed \
    | singularity run --app bedtools $CONTAINER intersect -a - -b a.bed b.bed c.bed -wa -wb \
    | singularity run --app bedtools $CONTAINER groupby -g 1-5 -c 13 -o mean \
    | column -t
fi

rm -f *.bed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The real question is, will this scale?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bedtools</title>
      <link>http://icaoberg.github.io/post/singularity-bedtools/</link>
      <pubDate>Sun, 26 Jan 2020 18:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-bedtools/</guid>
      <description>

&lt;h2 id=&#34;about-bedtools&#34;&gt;About bedtools&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;logo.png&#34; alt=&#34;Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Collectively, the &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;bedtools&lt;/a&gt; utilities are a swiss-army knife of tools for a wide-range of genomics analysis tasks. The most widely-used tools enable genome arithmetic: that is, set theory on the genome. For example, bedtools allows one to intersect, merge, count, complement, and shuffle genomic intervals from multiple files in widely-used genomic file formats such as BAM, BED, GFF/GTF, VCF. While each individual tool is designed to do a relatively simple task (e.g., intersect two interval files), quite sophisticated analyses can be conducted by combining multiple bedtools operations on the UNIX command line.&lt;/p&gt;

&lt;h2 id=&#34;downloading-the-image-from-sylabs-io&#34;&gt;Downloading the image from SyLabs.io&lt;/h2&gt;

&lt;p&gt;For simplicity, I have placed a copy of the container in &lt;a href=&#34;https://cloud.sylabs.io/library/_container/5e2fb360bb587a8c79c3e875&#34; target=&#34;_blank&#34;&gt;SyLabs.io&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; singularity search bedtools

No users found for &#39;bedtools&#39;

No collections found for &#39;bedtools&#39;

Found 1 containers for &#39;bedtools&#39;
	library://icaoberg/default/bedtools
		Tags: v2.29.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To download this image locally simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;singularity pull library://icaoberg/default/bedtools:v2.29.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;using-the-singularity-image&#34;&gt;Using the Singularity image&lt;/h3&gt;

&lt;h4 id=&#34;example-create-a-master-chromhmm-track-from-the-9-distinct-cell-types&#34;&gt;Example. Create a master ChromHMM track from the 9 distinct cell types.&lt;/h4&gt;

&lt;p&gt;You can find the script &lt;code&gt;example01&lt;/code&gt; &lt;a href=&#34;https://gist.github.com/icaoberg/2253e0ef34b3fd7dd3f4703d8037e83f&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. It is based on existing examples, the script is simply calling bedtools in the Singularity container.&lt;/p&gt;

&lt;p&gt;Standard output is not neccesarily useful, however you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/296318&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/296318.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;I am nothing but a humble programmer creating the container for this wonderful app. &lt;a href=&#34;https://bedtools.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;bedtools&lt;/a&gt; is developed in the &lt;a href=&#34;http://quinlanlab.org/&#34; target=&#34;_blank&#34;&gt;Quinlan laboratory&lt;/a&gt; at the &lt;a href=&#34;https://www.utah.edu/&#34; target=&#34;_blank&#34;&gt;University of Utah&lt;/a&gt; and benefits from fantastic contributions made by scientists worldwide.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gifgen</title>
      <link>http://icaoberg.github.io/post/singularity-gifgen/</link>
      <pubDate>Tue, 14 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gifgen/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NY_EOhHRTdo&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;./sabina.gif&#34; alt=&#34;Joaquin Sabina&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lukechilds/gifgen&#34; target=&#34;_blank&#34;&gt;gifgen&lt;/a&gt; provides simple high quality GIF encoding.&lt;/p&gt;

&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;

&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gifgen&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gifgen.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build the image locally simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gifgen.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;

&lt;p&gt;To build the image remotely simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;running-gifgen&#34;&gt;Running gifgen&lt;/h2&gt;

&lt;p&gt;To run the app in the container, simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;singularity exec singularity-gifgen.simg gifgen
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Singularity and Travis config</title>
      <link>http://icaoberg.github.io/post/singularity-travis-config/</link>
      <pubDate>Tue, 07 Jan 2020 16:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-travis-config/</guid>
      <description>

&lt;p&gt;If you read my previous post, I updated a repository I built a while ago with a Singularity recipe for gotop. The main reason for the post was to show how easy it is to build a simple small container both locally and remotely.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;https://giphy.com/embed/XR9Dp54ZC4dji&#34; width=&#34;480&#34; height=&#34;288&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;br&gt;&lt;strong&gt;Figure 1&lt;/strong&gt;. Surprised, it works pretty easily.&lt;/p&gt;

&lt;p&gt;However because my original repository was built a while ago, I built my original container on Singularity v2.6.0 while the latest is Singularity v3.5.2. Hence, I needed to update my scripts. And you know, it wasn&amp;rsquo;t that difficult and it worked.&lt;/p&gt;

&lt;p&gt;But then&amp;hellip;. Travis.&lt;/p&gt;

&lt;h2 id=&#34;travis-my-old-enemy&#34;&gt;Travis, my old enemy&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./logo.png&#34; alt=&#34;Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Travis CI is a hosted continuous integration service used to build and test software projects hosted at GitHub.&amp;rdquo; [&lt;a href=&#34;https://en.wikipedia.org/wiki/Travis_CI&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;]. It was comforting to find Singularity Hub has a template I could reuse. To see their repo click &lt;a href=&#34;https://github.com/singularityhub/travis-ci&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hence, I needed to update my Travis config file as well. It wasn&amp;rsquo;t easy. Installing the newer version of Singularity was a little more convoluted than the older versions (though not that much). Now, the Travis config for &lt;a href=&#34;https://github.com/icaoberg/singularity-gotop&#34; target=&#34;_blank&#34;&gt;gotop&lt;/a&gt; looks like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;os: linux

# whitelist
branches:
  only:
    - master

language: go

go:
    - &amp;quot;1.13&amp;quot;

python:
    - &amp;quot;3.7&amp;quot;

addons:
  apt:
    packages:
      - flawfinder
      - squashfs-tools
      - uuid-dev
      - libuuid1
      - libffi-dev
      - libssl-dev
      - libssl1.0.0
      - libarchive-dev
      - libgpgme11-dev
      - libseccomp-dev
  homebrew:
    packages:
      - squashfs
    update: true

sudo: required
#dist: trusty

matrix:
  include:
    - python: &amp;quot;2.6&amp;quot;
    - python: &amp;quot;3.5&amp;quot;

before_install:
  - sudo chmod u+x .travis/*.sh
  - /bin/bash .travis/setup.sh

install:
  - # override

script:
  - bash ./build.sh
  - du -h singularity-gotop.simg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the &lt;code&gt;./.travis/setup.sh&lt;/code&gt; is just as straight-forward&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash -ex

sudo sed -i -e &#39;s/^Defaults\tsecure_path.*$//&#39; /etc/sudoers

pip install --user sregistry[all]

# Install Singularity
SINGULARITY_BASE=&amp;quot;${GOPATH}/src/github.com/sylabs/singularity&amp;quot;
export PATH=&amp;quot;${GOPATH}/bin:${PATH}&amp;quot;

mkdir -p &amp;quot;${GOPATH}/src/github.com/sylabs&amp;quot;
cd &amp;quot;${GOPATH}/src/github.com/sylabs&amp;quot;

git clone https://github.com/sylabs/singularity
git checkout tags/v3.5.2
cd singularity
./mconfig -v -p /usr/local
make -j `nproc 2&amp;gt;/dev/null || echo 1` -C ./builddir all
sudo make -C ./builddir install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The script above is a cleaned up version of the script suggested by the Singularity Hub repo. &lt;a href=&#34;https://travis-ci.org/icaoberg/singularity-gotop/builds/633977539&#34; target=&#34;_blank&#34;&gt;It works!&lt;/a&gt; So I am a happy camper.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;https://giphy.com/embed/pGOLBwYBTEvsI&#34; width=&#34;480&#34; height=&#34;357&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen&gt;&lt;/iframe&gt;&lt;br&gt;&lt;strong&gt;Figure 2&lt;/strong&gt;. I am a happy camper.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gotop</title>
      <link>http://icaoberg.github.io/post/singularity-gotop/</link>
      <pubDate>Tue, 07 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-gotop/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;./logo.png&#34; alt=&#34;Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34;&gt;gotop&lt;/a&gt; is a very useful app that I use all the time in our department cluster. Even though I have root privileges in our HPC cluster, I&amp;rsquo;d rather do my computing as a regular user. It keeps me in check and forces me to think like a power/regular user.&lt;/p&gt;

&lt;p&gt;Hence, I use &lt;a href=&#34;https://github.com/cjbassi/gotop&#34; target=&#34;_blank&#34;&gt;gotop&lt;/a&gt; in a Singularity container.&lt;/p&gt;

&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;

&lt;p&gt;You can find the recipe to build the container &lt;a href=&#34;https://github.com/icaoberg/singularity-gotop&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To facilitate building the container, you will find two &lt;strong&gt;simple&lt;/strong&gt; scripts in the repository&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rbuild.sh&lt;/code&gt;. Builds the image remotely and then pulls it down locally. You will need access to &lt;a href=&#34;https://cloud.sylabs.io/builder&#34; target=&#34;_blank&#34;&gt;SyLabs.io Remote Builder&lt;/a&gt; to do this. Getting access to the Remote Builder is beyond the scope of this post.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build.sh&lt;/code&gt;. Builds the image locally. You will need root privileges to build the container locally.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;building-the-image-locally&#34;&gt;Building the image locally&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;build.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

sudo singularity build $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build the image locally simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292285&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292285.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;building-the-image-remotely&#34;&gt;Building the image remotely&lt;/h3&gt;

&lt;p&gt;The script &lt;code&gt;rbuild.sh&lt;/code&gt; looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

IMAGE=singularity-gotop.simg
DEFINITION=Singularity

if [ -f $IMAGE ]; then
	rm -fv $IMAGE
fi

singularity build --remote $IMAGE $DEFINITION
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you notice, there isn&amp;rsquo;t much difference between this script and the previous script.&lt;/p&gt;

&lt;p&gt;To build the image remotely simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash ./rbuild.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/cttCPrVN082jOCFdAUyOi0RsB.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A note on building remotely. Because my script is simple and straightforward, there are no annotations associated with this build. If you were to take a look at my profile in &lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg&#34; target=&#34;_blank&#34;&gt;SyLabs.io&lt;/a&gt; you will notice there is a new project associated with the remote build&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./screenshot.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a footprint, evidence the image was built remotely. Also notice the download number is 1. This is because running the remote commands builds the container then downloads it locally.&lt;/p&gt;

&lt;h2 id=&#34;running-gotop&#34;&gt;Running gotop&lt;/h2&gt;

&lt;p&gt;To run the app in the container, simply run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;singularity exec singularity-gotop.simg gotop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output should look similar to&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/292294&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/292294.svg&#34; alt=&#34;asciicast&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Singularity Desktop MacOSX (Beta Release)</title>
      <link>http://icaoberg.github.io/post/singularity-macosx-journey-1/</link>
      <pubDate>Tue, 07 Jan 2020 08:00:00 +0000</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-macosx-journey-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: My first journey went better than expected. However the purpose of this post is to document the issues I experienced in order to, hopefully, find a solution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>browsh</title>
      <link>http://icaoberg.github.io/post/singularity-browsh/</link>
      <pubDate>Sun, 13 Oct 2019 01:19:33 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-browsh/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just created and pushed an image to &lt;a href=&#34;https://twitter.com/SylabsIO?ref_src=twsrc%5Etfw&#34;&gt;@SylabsIO&lt;/a&gt; cloud for &lt;a href=&#34;https://twitter.com/brow_sh?ref_src=twsrc%5Etfw&#34;&gt;@brow_sh&lt;/a&gt;, an amazing fully-modern text-based browser developed by &lt;a href=&#34;https://twitter.com/twombh?ref_src=twsrc%5Etfw&#34;&gt;@twombh&lt;/a&gt; &lt;a href=&#34;https://t.co/0FxdxDqO8U&#34;&gt;pic.twitter.com/0FxdxDqO8U&lt;/a&gt;&lt;/p&gt;&amp;mdash; justahappygeek (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1183250309612789765?ref_src=twsrc%5Etfw&#34;&gt;October 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;Here is the deal, I have been using &lt;a href=&#34;http://lynx.browser.org/&#34; target=&#34;_blank&#34;&gt;Lynx&lt;/a&gt; since forever. Just because. However today I found about &lt;a href=&#34;https://www.brow.sh/&#34; target=&#34;_blank&#34;&gt;browsh&lt;/a&gt;. What a joyous moment!&lt;/p&gt;

&lt;p&gt;Finally a browser I would feel happy running on the HPC cluster. As always, I think Singularity is the best way to deploy tools like this for larger machines (especially if you are a user without root privileges).&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/icaoberg/singularity-browsh&#34; target=&#34;_blank&#34;&gt;GitHub source code repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.sylabs.io/library/icaoberg/default/browsh&#34; target=&#34;_blank&#34;&gt;SyLabs.io Cloud image repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CellOrganizer for Singularity</title>
      <link>http://icaoberg.github.io/post/singularity-retweet-ceo/</link>
      <pubDate>Sat, 21 Sep 2019 00:20:50 -0400</pubDate>
      <guid>http://icaoberg.github.io/post/singularity-retweet-ceo/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I have been using Matlab for about 18 years to do anything and everything. Currently, I am using it to develop &lt;a href=&#34;https://twitter.com/CellOrganizer?ref_src=twsrc%5Etfw&#34;&gt;@CellOrganizer&lt;/a&gt; along with CellOrganizer for &lt;a href=&#34;https://twitter.com/ProjectJupyter?ref_src=twsrc%5Etfw&#34;&gt;@ProjectJupyter&lt;/a&gt; on  &lt;a href=&#34;https://twitter.com/Docker?ref_src=twsrc%5Etfw&#34;&gt;@docker&lt;/a&gt;, CellOrganizer for &lt;a href=&#34;https://twitter.com/galaxyproject?ref_src=twsrc%5Etfw&#34;&gt;@galaxyproject&lt;/a&gt; and CellOrganizer on &lt;a href=&#34;https://twitter.com/SingularityApp?ref_src=twsrc%5Etfw&#34;&gt;@SingularityApp&lt;/a&gt;. All part of &lt;a href=&#34;https://twitter.com/MMBioS?ref_src=twsrc%5Etfw&#34;&gt;@MMBioS&lt;/a&gt; &lt;a href=&#34;https://t.co/qSUGxgmeAX&#34;&gt;pic.twitter.com/qSUGxgmeAX&lt;/a&gt;&lt;/p&gt;&amp;mdash; justahappygeek (@justahappygeek) &lt;a href=&#34;https://twitter.com/justahappygeek/status/1174705344339161089?ref_src=twsrc%5Etfw&#34;&gt;September 19, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;P.S. I got retweeted by the official Singularity account on Twitter as well as their CEO. What a time to be alive.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
